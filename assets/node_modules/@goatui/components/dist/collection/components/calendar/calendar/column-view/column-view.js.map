{"version":3,"file":"column-view.js","sourceRoot":"","sources":["../../../../../src/components/calendar/calendar/column-view/column-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport { addDays, addHours, differenceInDays, endOfDay, format, isEqual, startOfDay } from 'date-fns';\nimport { calculateWeekRange } from '../utils';\nimport ColumnEventManager from './ColumnEventManager';\n\n\n@Component({\n  tag: 'goat-calendar-column-view',\n  styleUrl: 'column-view.scss',\n  shadow: true,\n})\nexport class CalendarColumnView implements ComponentInterface {\n\n  @Element() elm!: HTMLElement;\n\n  @Prop() events: any[] = [];\n\n  @Prop() view = 'week';\n\n  @Prop() days = 7;\n\n  @Prop() currentTime: Date;\n\n  @Prop() contextDate: Date;\n\n  dateRange: any;\n\n\n  singleDayEvents: any = {};\n\n  manager: ColumnEventManager;\n\n  async componentWillLoad() {\n    this.manager = new ColumnEventManager();\n    this.manager.addEvents(this.events);\n\n  }\n\n  async componentDidLoad() {\n    const viewBodyHeight = this.elm.shadowRoot.querySelector('.view-body').scrollHeight;\n    this.elm.shadowRoot.querySelector('.view-body').scroll({ top: (this.getTimePercent(this.currentTime) / 100) * viewBodyHeight - 150 });\n  }\n\n\n  renderHeader() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate); differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1)) {\n      const cls = ['column'];\n      const diff = differenceInDays(startOfDay(i), startOfDay(this.currentTime));\n      if (diff === 0)\n        cls.push('today');\n      else if (diff < 0)\n        cls.push('past');\n      else if (diff < 0)\n        cls.push('future');\n\n      columns.push(<div class={cls.join(' ')}>\n        <div class='column-content'>\n          <div class='date' onClick={() => {\n            alert('date clicked');\n          }}>\n            {format(i, 'dd')}\n          </div>\n          <div class='day'>\n            {format(i, 'E')}\n          </div>\n        </div>\n      </div>);\n    }\n    return columns;\n  }\n\n\n  renderBackgroundColumns() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate); differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1)) {\n      const cls = ['column'];\n      if (isEqual(startOfDay(i), startOfDay(this.currentTime)))\n        cls.push('active');\n      columns.push(<div class={cls.join(' ')}>\n      </div>);\n    }\n    return columns;\n  }\n\n  renderBodyBackground() {\n    const rows = [];\n    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours\n      const cls = ['row'];\n      if (i % 2)\n        cls.push('hour');\n      const row = <div class={cls.join(' ')}>\n        {this.renderBackgroundColumns()}\n      </div>;\n      rows.push(row);\n    }\n    return <div class='background'>{rows}</div>;\n  }\n\n  renderScale() {\n    const rows = [];\n    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours\n      const cls = ['row'];\n      if (i % 2)\n        cls.push('hour');\n      const startTime = startOfDay(new Date());\n      const row = <div class={cls.join(' ')}>\n        {\n          (() => {\n            if (i % 2 == 0 && i) {\n              return <div class='time'>{format(addHours(startTime, i / 2), 'hh a')}</div>;\n            }\n          })()\n        }\n      </div>;\n      rows.push(row);\n    }\n    return <div class='background'>{rows}</div>;\n  }\n\n  renderEvents() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate), j = 0; differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1), j++) {\n      const cls = ['column'];\n      if (isEqual(startOfDay(i), startOfDay(this.currentTime)))\n        cls.push('active');\n      columns.push(<div class={cls.join(' ')}>\n        <div class='column-content'>\n          {\n            (() => {\n              /*if (this.eventDays[format(startOfDay(i), 'dd-MM-yyyy')]) {\n                const eventDay = this.eventDays[format(startOfDay(i), 'dd-MM-yyyy')];\n                const columnsLength = eventDay.length;\n                return eventDay.map((nodes, columnIndex) => {\n                  return nodes.map((node) => {\n                    return <div class='event' style={{\n                      top: `${this.getTimePercent(node.event.start, startOfDay(i))}%`,\n                      height: `${this.getTimePercent(node.event.end, startOfDay(i)) - this.getTimePercent(node.event.start, startOfDay(i))}%`,\n                      left: `${columnIndex / columnsLength * 100}%`,\n                      width: `calc(${(1 * node.width) / columnsLength * 100}% - 1px)`,\n                    }}>\n                      <div class='event-title'>{node.event.title || '(no title)'}</div>\n                    </div>;\n                  });\n                });\n              }*/\n            })()\n          }\n\n        </div>\n      </div>);\n    }\n    return <div class='events-container'>{\n      columns\n    }</div>;\n  }\n\n  getDatePercent() {\n    const currentDay = differenceInDays(startOfDay(this.currentTime), this.dateRange.startDate);\n    return (currentDay / this.dateRange.totalDays) * 100;\n  }\n\n  getTimePercent(time, forDay?) {\n    if (!forDay)\n      forDay = time;\n    const startDate = startOfDay(forDay);\n    const endDate = endOfDay(forDay);\n    const percent = (time.valueOf() - startDate.valueOf()) / (endDate.valueOf() - startDate.valueOf()) * 100;\n    if (percent < 0)\n      return 0;\n    if (percent > 100)\n      return 100;\n    return percent;\n  }\n\n\n  render() {\n    if (this.view === 'week') {\n      this.dateRange = calculateWeekRange(this.contextDate, 1);\n    } else {\n      this.dateRange.startDate = startOfDay(this.contextDate);\n      this.dateRange.endDate = endOfDay(addDays(this.contextDate, this.days - 1));\n      this.dateRange.totalDays = this.days;\n    }\n\n\n    return <div class='calendar-column-view'>\n      <div class='view-header'>\n        <div class='scale' />\n        <div class='columns'>\n          {this.renderHeader()}\n        </div>\n        <div class='scrollbar-placeholder' />\n      </div>\n      <div class='view-body'>\n        <div class='view-body-scroll'>\n          <div class='scale'>\n            {this.renderScale()}\n          </div>\n          <div class='drawing-area'>\n            <goat-calendar-column-view-background columns={this.dateRange.totalDays} />\n            {this.renderEvents()}\n          </div>\n          {\n            (() => {\n              if (this.currentTime.valueOf() > this.dateRange.startDate.valueOf() - 1 && this.currentTime.valueOf() < this.dateRange.endDate.valueOf() + 1) {\n                return <div class='current-time-line'\n                            style={{ top: `calc(${this.getTimePercent(this.currentTime)}% - 1px)` }}>\n                  <div class='time'>{format(this.contextDate, 'hh:mm a')}</div>\n                  <div class='dash-line' style={{ width: `${this.getDatePercent()}%` }}></div>\n                  <div class='dot' style={{ 'left': `calc( ${this.getDatePercent()}% - 0.25rem)` }}></div>\n                  <div class='line'\n                       style={{\n                         'left': `${this.getDatePercent()}%`,\n                         width: `${(1 / this.dateRange.totalDays) * 100}%`,\n                       }}></div>\n                </div>;\n              }\n            })()\n          }\n        </div>\n      </div>\n    </div>;\n  }\n\n\n}\n"]}