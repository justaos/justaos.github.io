import { h, Host } from '@stencil/core';
import { isEqual, startOfDay } from 'date-fns';
export class CalendarColumnViewBackground {
  constructor() {
    this.columns = 1;
  }
  renderBackgroundColumns() {
    const columns = [];
    for (let i = 0; i < this.columns; i++) {
      const cls = ['column'];
      if (isEqual(startOfDay(i), startOfDay(new Date())))
        cls.push('active');
      columns.push(h("div", { class: cls.join(' ') }));
    }
    return columns;
  }
  render() {
    const rows = [];
    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours
      const cls = ['row'];
      if (i % 2)
        cls.push('hour');
      const row = h("div", { class: cls.join(' ') }, this.renderBackgroundColumns());
      rows.push(row);
    }
    return (h(Host, null, h("div", { class: 'background' }, rows)));
  }
  static get is() { return "goat-calendar-column-view-background"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["column-view-background.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["column-view-background.css"]
    };
  }
  static get properties() {
    return {
      "columns": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "columns",
        "reflect": false,
        "defaultValue": "1"
      }
    };
  }
}
//# sourceMappingURL=column-view-background.js.map
