import { h, Host } from '@stencil/core';
import { addDays, format } from 'date-fns';
/**
 * @name Calendar
 * @description The calendar component is used to display information in a daily, weekly, monthly, or category view.
 * @img /assets/img/calendar.png
 */
export class Calendar {
  constructor() {
    this.events = [];
    this.availableViews = [{ label: 'Day', value: 'day', type: 'column', days: 1 }, {
        label: 'Week',
        value: 'week',
        type: 'column',
        days: 7,
      }, {
        label: 'Month',
        value: 'month',
        type: 'month',
      }];
    this.view = 'week';
    this.showLoader = false;
    this.timezone = undefined;
    this.contextDate = undefined;
  }
  async componentWillLoad() {
    console.log(this.view);
    if (this.timezone) {
      this.currentTime = new Date(new Date().toLocaleString('en', { timeZone: this.timezone }));
    }
    else {
      this.currentTime = new Date();
    }
    if (!this.contextDate) {
      this.contextDate = this.currentTime;
    }
  }
  renderCalendarView() {
    this.currentView = this.availableViews.find((view) => {
      return view.value === this.view;
    });
    if (!this.currentView)
      return 'Invalid view';
    if (this.currentView.type === 'column') {
      return h("goat-calendar-column-view", { currentTime: this.currentTime, contextDate: this.contextDate, events: [] /*generateEvents()*/ });
    }
  }
  renderHeader() {
    return h("div", { class: 'calendar-header-classic' }, h("div", { class: 'header-left' }, h("goat-button", { variant: 'outline', size: 'sm', class: 'color-secondary', onClick: () => {
        this.contextDate = this.currentTime;
      } }, "Today"), h("goat-button", { variant: 'ghost', size: 'sm', class: 'color-secondary', icon: 'chevron-left', onClick: () => {
        this.contextDate = addDays(this.contextDate, -7);
      } }), h("goat-button", { variant: 'ghost', size: 'sm', class: 'color-secondary', icon: 'chevron-right', onClick: () => {
        this.contextDate = addDays(this.contextDate, 7);
      } }), h("div", { class: 'title' }, format(this.contextDate, 'MMMM d, yyyy'))), h("div", { class: 'header-right' }, h("goat-select", { size: 'sm', positions: 'bottom-left', value: this.view, items: this.availableViews.map((view) => {
        return {
          'label': view.label,
          'value': view.value,
        };
      }), "onGoat:change": (event) => {
        this.view = event.detail.value;
      } })));
  }
  render() {
    return (h(Host, null, h("div", { class: 'calendar' }, h("div", { class: 'calendar-header' }, this.renderHeader()), h("div", { class: 'calendar-body' }, h("div", { class: 'view-container' }, this.renderCalendarView()), h("div", { class: 'contextual-panel' })))));
  }
  static get is() { return "goat-calendar"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["calendar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["calendar.css"]
    };
  }
  static get properties() {
    return {
      "events": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "any[]",
          "resolved": "any[]",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "defaultValue": "[]"
      },
      "availableViews": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "available-views",
        "reflect": false,
        "defaultValue": "[{ label: 'Day', value: 'day', type: 'column', days: 1 }, {\n    label: 'Week',\n    value: 'week',\n    type: 'column',\n    days: 7,\n  }, {\n    label: 'Month',\n    value: 'month',\n    type: 'month',\n  }]"
      },
      "view": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "view",
        "reflect": false,
        "defaultValue": "'week'"
      },
      "showLoader": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Show loader."
        },
        "attribute": "show-loader",
        "reflect": false,
        "defaultValue": "false"
      },
      "timezone": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "timezone",
        "reflect": false
      },
      "contextDate": {
        "type": "any",
        "mutable": true,
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "context-date",
        "reflect": false
      }
    };
  }
  static get elementRef() { return "elm"; }
}
//# sourceMappingURL=calendar.js.map
