{"version":3,"file":"avatar.js","sourceRoot":"","sources":["../../../../src/components/content/avatar/avatar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAElE;;;;GAIG;AAMH,MAAM,OAAO,MAAM;EALnB;IASE;;OAEG;IACK,SAAI,GAAW,MAAM,CAAC;IAEtB,SAAI,GAAW,EAAE,CAAC;IAElB,QAAG,GAAW,EAAE,CAAC;GA+C1B;EA7CS,WAAW;IACjB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/D,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9D,OAAO,GAAG,SAAS,GAAG,QAAQ,EAAE,CAAC;EACnC,CAAC;EAGO,WAAW;IACjB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,aAAa;IACb,OAAO,CAAC,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;EACpE,CAAC;EAGD,MAAM;IACJ,MAAM,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,GAAG,EAAE;MACZ,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC7B;SAAM;MACL,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAChC;IACD,OAAO,CACL,EAAC,IAAI,IAAC,KAAK,EAAE,IAAI,CAAC,IAAI;MACpB,WAAK,KAAK,EAAC,kBAAkB;QAC3B,WAAK,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EACvB,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,IAE7E,CAAC,GAAG,EAAE;UACJ,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,WAAK,KAAK,EAAC,OAAO,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,GAAI,CAAC;WAC7D;eAAM;YACL,OAAO,WAAK,KAAK,EAAC,UAAU,IACzB,IAAI,CAAC,WAAW,EAAE,CACf,CAAC;WACR;QACH,CAAC,CAAC,EAAE,CAEF,CACF,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, Element, h, Host, Prop } from '@stencil/core';\r\n\r\n/**\r\n * @name Avatar\r\n * @description Avatars in their simplest form display content within a circular container.\r\n * @example <goat-avatar size=\"5rem\" name=\"Shivaji Varma\" src=\"/assets/img/avatar.png\"></goat-avatar>\r\n */\r\n@Component({\r\n  tag: 'goat-avatar',\r\n  styleUrl: 'avatar.scss',\r\n  shadow: true,\r\n})\r\nexport class Avatar {\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  /**\r\n   * Avatar size.\r\n   */\r\n  @Prop() size: string = '2rem';\r\n\r\n  @Prop() name: string = '';\r\n\r\n  @Prop() src: string = '';\r\n\r\n  private getInitials() {\r\n    const name = this.name.split(' ');\r\n    let firstName = name[0] ? name[0].charAt(0).toUpperCase() : '';\r\n    let lastName = name[1] ? name[1].charAt(0).toUpperCase() : '';\r\n    return `${firstName}${lastName}`;\r\n  }\r\n\r\n\r\n  private getFontSize() {\r\n    const size = this.size;\r\n    const fontSize = this.size.match(/^\\d+(\\.\\d{1,2})?/)[0];\r\n    // @ts-ignore\r\n    return (fontSize * 4 / 10) + size.replace(/^\\d+(\\.\\d{1,2})?/, '');\r\n  }\r\n\r\n\r\n  render() {\r\n    const cssCls = ['avatar'];\r\n    if (this.src) {\r\n      cssCls.push('avatar-image');\r\n    } else {\r\n      cssCls.push('avatar-initials');\r\n    }\r\n    return (\r\n      <Host title={this.name}>\r\n        <div class='avatar-container'>\r\n          <div class={cssCls.join(' ')}\r\n               style={{ width: this.size, height: this.size, fontSize: this.getFontSize() }}>\r\n            {\r\n              (() => {\r\n                if (this.src) {\r\n                  return <img class='image' src={this.src} alt={this.name} />;\r\n                } else {\r\n                  return <div class='initials'>\r\n                    {this.getInitials()}\r\n                  </div>;\r\n                }\r\n              })()\r\n            }\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"]}