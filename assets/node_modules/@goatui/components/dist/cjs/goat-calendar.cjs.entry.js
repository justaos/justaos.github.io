'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-b8774bee.js');
const index$1 = require('./index-2ce866e5.js');
require('./index-cdcc455a.js');

const calendarCss = "*{box-sizing:border-box}:host{font-family:var(--font-family-base)}::selection{color:var(--color-white, #ffffff);background:var(--color-primary, var(--color-blue-60, #0f62fe))}::-webkit-scrollbar{width:var(--scrollbar-width, 0.75rem);height:var(--scrollbar-width, 0.75rem)}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb :hover{background:#555}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.center-content{display:flex;align-items:center;justify-content:center}:host([hidden]){display:none}@keyframes reveal{0%{opacity:0;transform:translateY(8px)}}:host{display:block;height:100%;min-height:20em;--calendar-border-color:var(--ui-04, var(--color-gray-50, #8d8d8d));--scale-color:var(--text-placeholder, var(--color-gray-40, #a8a8a8))}.calendar{height:100%;display:flex;flex-direction:column}.calendar .calendar-header .calendar-header-classic{display:flex;padding:1rem}.calendar .calendar-header .calendar-header-classic .header-left{display:flex;gap:1rem;flex:1}.calendar .calendar-header .calendar-header-classic .header-left .title{display:flex;align-items:center}.calendar .calendar-header goat-select{margin-bottom:0}.calendar .calendar-body{flex:1;overflow:auto}.calendar .calendar-body .view-container{height:100%}";

const Calendar = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.events = [];
    this.availableViews = [{ label: 'Day', value: 'day', type: 'column', days: 1 }, {
        label: 'Week',
        value: 'week',
        type: 'column',
        days: 7,
      }, {
        label: 'Month',
        value: 'month',
        type: 'month',
      }];
    this.view = 'week';
    this.showLoader = false;
    this.timezone = undefined;
    this.contextDate = undefined;
  }
  async componentWillLoad() {
    console.log(this.view);
    if (this.timezone) {
      this.currentTime = new Date(new Date().toLocaleString('en', { timeZone: this.timezone }));
    }
    else {
      this.currentTime = new Date();
    }
    if (!this.contextDate) {
      this.contextDate = this.currentTime;
    }
  }
  renderCalendarView() {
    this.currentView = this.availableViews.find((view) => {
      return view.value === this.view;
    });
    if (!this.currentView)
      return 'Invalid view';
    if (this.currentView.type === 'column') {
      return index.h("goat-calendar-column-view", { currentTime: this.currentTime, contextDate: this.contextDate, events: [] /*generateEvents()*/ });
    }
  }
  renderHeader() {
    return index.h("div", { class: 'calendar-header-classic' }, index.h("div", { class: 'header-left' }, index.h("goat-button", { variant: 'outline', size: 'sm', class: 'color-secondary', onClick: () => {
        this.contextDate = this.currentTime;
      } }, "Today"), index.h("goat-button", { variant: 'ghost', size: 'sm', class: 'color-secondary', icon: 'chevron-left', onClick: () => {
        this.contextDate = index$1.addDays(this.contextDate, -7);
      } }), index.h("goat-button", { variant: 'ghost', size: 'sm', class: 'color-secondary', icon: 'chevron-right', onClick: () => {
        this.contextDate = index$1.addDays(this.contextDate, 7);
      } }), index.h("div", { class: 'title' }, index$1.format(this.contextDate, 'MMMM d, yyyy'))), index.h("div", { class: 'header-right' }, index.h("goat-select", { size: 'sm', positions: 'bottom-left', value: this.view, items: this.availableViews.map((view) => {
        return {
          'label': view.label,
          'value': view.value,
        };
      }), "onGoat:change": (event) => {
        this.view = event.detail.value;
      } })));
  }
  render() {
    return (index.h(index.Host, null, index.h("div", { class: 'calendar' }, index.h("div", { class: 'calendar-header' }, this.renderHeader()), index.h("div", { class: 'calendar-body' }, index.h("div", { class: 'view-container' }, this.renderCalendarView()), index.h("div", { class: 'contextual-panel' })))));
  }
  get elm() { return index.getElement(this); }
};
Calendar.style = calendarCss;

exports.goat_calendar = Calendar;

//# sourceMappingURL=goat-calendar.cjs.entry.js.map