{"version":3,"sources":["src/components/form/select/select.scss?tag=goat-select&encapsulation=shadow","src/components/form/select/select.tsx","src/components/content/tag/tag.scss?tag=goat-tag&encapsulation=shadow","src/components/content/tag/tag.tsx"],"names":["selectCss","Select","this","gid","getComponentIndex","selectHandler","selectItemValue","disabled","readonly","addItem","closeList","clearInput","removeItem","value","blurHandler","hasFocus","focusHandler","isOpen","setTimeout","setFocus","openList","search","searchString","dropdownContent","dropdownContentElm","dropdownContentHeight","getBoundingClientRect","height","dropdownContentWidth","width","fixPosition","nativeInput","focus","toggleList","keyDownHandler","evt","key","preventDefault","console","log","menuElm","onInput","ev","input","target","goatSearch","emit","[object Object]","displayElement","blur","debounceEvent","debounce","path","composedPath","elm","detail","toString","split","getValues","includes","multiple","push","join","goatChange","newItem","getItemByValue","filter","item","removedItem","length","items","find","label","placeholder","h","positions","position","getAttributeNames","forEach","name","configAria","getAttribute","removeAttribute","startSlotHasContent","querySelector","endSlotHasContent","isMobile","i","dropdownButtonRect","dropdownContentRect","top","bottom","left","right","isOut","isOutOfViewport","any","debounceChanged","values","map","class","Host","has-value","hasValue","has-focus","is-open","dropdown","select","input-container","start-slot-has-content","end-slot-has-content","renderMultiSelectValues","Object","assign","ref","type","onBlur","onFocus","onKeyDown","tabindex","aria-disabled","onClick","getDisplayValue","clearable","size","role","getModeIcon","renderDropdownList","showLoader","el","shade","filteredItems","filterItems","empty","toLocaleLowerCase","tagCss","Tag","dismissClickHandler","goatTagDismissClick","textContent","tag","renderCloseButton"],"mappings":"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","sourcesContent":["@import \"../common-input\";\r\n\r\n\r\n\r\n.dropdown {\r\n  position: relative;\r\n\r\n  .dropdown-content {\r\n    z-index: v(--z-index-dropdown-content);\r\n    position: absolute;\r\n    width: max-content;\r\n    line-height: 0;\r\n    transform: scale(0);\r\n    transition: transform 0.1s ease-out 0s;\r\n  }\r\n\r\n  .chevron-down {\r\n    transition: transform 0.1s ease-out 0s;\r\n  }\r\n\r\n  &.is-open {\r\n    .dropdown-content {\r\n      transform: scale(1);\r\n    }\r\n    .chevron-down {\r\n      transform: rotate(180deg);\r\n    }\r\n  }\r\n\r\n  &.bottom-right .dropdown-content {\r\n    top: calc(100% + #{v(--spacing-2)});\r\n    left: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.bottom-left .dropdown-content {\r\n    top: calc(100% + #{v(--spacing-2)});\r\n    right: 0;\r\n    transform-origin: top;\r\n  }\r\n\r\n  &.top-right .dropdown-content {\r\n    bottom: calc(100% + #{v(--spacing-2)});\r\n    left: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.top-left .dropdown-content {\r\n    bottom: calc(100% + #{v(--spacing-2)});\r\n    right: 0;\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  &.center .dropdown-content {\r\n    top: 0;\r\n    left: 0;\r\n    position: fixed;\r\n    transform-origin: center;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    pointer-events: none;\r\n  }\r\n\r\n}\r\n\r\n.select {\r\n\r\n  .dropdown-content {\r\n    width: 100%;\r\n    min-width: 10rem;\r\n  }\r\n\r\n  .menu {\r\n    width: 100%;\r\n  }\r\n\r\n  .display-value {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .multi-select-value {\r\n    padding-inline-end: v(--spacing-2);\r\n    &:last-child {\r\n      padding-inline-end: 0;\r\n    }\r\n  }\r\n\r\n  .input-container:not(.has-value) {\r\n    .display-value {\r\n      color: v(--text-placeholder);\r\n    }\r\n  }\r\n\r\n  .start-search {\r\n    height: 10rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: v(--spacing-3);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  ComponentInterface,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen,\r\n  Method,\r\n  Prop,\r\n  State,\r\n  Watch,\r\n} from '@stencil/core';\r\nimport { debounceEvent, getComponentIndex, isMobile, isOutOfViewport } from '../../../utils/utils';\r\nimport { Components } from '../../../components';\r\nimport GoatMenu = Components.GoatMenu;\r\n\r\n\r\n/**\r\n * @name Select\r\n * @description Allows the user to select one or more options using a dropdown.\r\n * @img /assets/img/select.png\r\n */\r\n@Component({\r\n  tag: 'goat-select',\r\n  styleUrl: 'select.scss',\r\n  shadow: true,\r\n})\r\nexport class Select implements ComponentInterface, InputComponentInterface {\r\n\r\n  gid: string = getComponentIndex();\r\n\r\n\r\n  /**\r\n   * The input field name.\r\n   */\r\n  @Prop() name: string = `goat-input-${this.gid}`;\r\n\r\n  /**\r\n   * The input field placeholder.\r\n   */\r\n  @Prop() placeholder: string;\r\n\r\n  /**\r\n   * The input field value.\r\n   */\r\n  @Prop({ mutable: true }) value?: string | number = '';\r\n\r\n  @Prop() multiple: boolean = false;\r\n\r\n  /**\r\n   * The select input size.\r\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  /**\r\n   * Search type\r\n   * Possible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.\r\n   */\r\n  @Prop() search: 'none' | 'initial' | 'contains' | 'managed' = 'none';\r\n\r\n  /**\r\n   * The input state.\r\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\r\n   */\r\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'warning' | 'default' = 'default';\r\n\r\n  /**\r\n   * If true, required icon is show. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) required: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * If true, the user cannot interact with the button. Defaults to `false`.\r\n   */\r\n  @Prop({ reflect: true }) readonly: boolean = false;\r\n\r\n\r\n  @Prop() showLoader: boolean = false;\r\n\r\n  @Prop({ mutable: true }) isOpen: boolean = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\r\n\r\n  /**\r\n   *  [{\r\n   *    label: 'Shivaji Varma',\r\n   *    value: 'shivaji-varma'\r\n   *  }]\r\n   */\r\n  @Prop() items: any = [];\r\n\r\n  @Prop() positions: string = 'bottom-right,top-right,bottom-left,top-left';\r\n\r\n\r\n  /**\r\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n   */\r\n  @Prop() clearable = false;\r\n\r\n  /**\r\n   * Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.\r\n   */\r\n  @Prop() debounce = 300;\r\n\r\n\r\n  /**\r\n   * Emitted when the value has changed.\r\n   */\r\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when the action button is clicked..\r\n   */\r\n  @Event({ eventName: 'goat:action-click' }) p4ActionClick: EventEmitter;\r\n\r\n  /**\r\n   * Emitted when a keyboard input occurred.\r\n   */\r\n  @Event({ eventName: 'goat:search' }) goatSearch: EventEmitter;\r\n\r\n  /**\r\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  @Method()\r\n  async setFocus(): Promise<void> {\r\n    this.displayElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   */\r\n  @Method()\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n\r\n  @Watch('debounce')\r\n  protected debounceChanged() {\r\n    this.goatSearch = debounceEvent(this.goatSearch, this.debounce);\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  windowClick(evt) {\r\n    const path = (evt.path || evt.composedPath());\r\n    for (const elm of path) {\r\n      if (elm == this.elm)\r\n        return;\r\n    }\r\n    this.isOpen = false;\r\n  }\r\n\r\n  @Listen('goat:menu-item-click')\r\n  menuItemClick(evt) {\r\n    this.selectHandler(evt.detail.value);\r\n  }\r\n\r\n  @Method()\r\n  async getComponentId() {\r\n    return this.gid;\r\n  }\r\n\r\n  @Element() elm!: HTMLElement;\r\n  private nativeInput?: HTMLInputElement;\r\n  private dropdownContentElm?: HTMLElement;\r\n  private menuElm?: GoatMenu;\r\n  private dropdownContentHeight: any;\r\n  private dropdownContentWidth: any;\r\n  @State() hasFocus = false;\r\n  @State() searchString: string = '';\r\n  @State() startSlotHasContent = false;\r\n  @State() endSlotHasContent = false;\r\n  @State() position: string;\r\n  private displayElement?: HTMLElement;\r\n\r\n  @Listen('goat:tag-dismiss')\r\n  tagDismissClick(evt) {\r\n    this.removeItem(evt.detail.value);\r\n  }\r\n\r\n  private getValues() {\r\n    if (this.value)\r\n      return this.value.toString().split(',');\r\n    else\r\n      return [];\r\n  }\r\n\r\n  private addItem(selectItemValue) {\r\n    let value = this.getValues();\r\n    if (!value.includes(selectItemValue)) {\r\n      if (!this.multiple)\r\n        value = [];\r\n      value.push(selectItemValue);\r\n      this.value = value.join(',');\r\n      this.goatChange.emit({ value: this.value, newItem: this.getItemByValue(selectItemValue) });\r\n    }\r\n  }\r\n\r\n  private removeItem(selectItemValue) {\r\n    let value = this.getValues();\r\n    if (value.includes(selectItemValue)) {\r\n      value = value.filter(item => item !== selectItemValue);\r\n      this.value = value.join(',');\r\n      this.goatChange.emit({ value: this.value, removedItem: this.getItemByValue(selectItemValue) });\r\n    }\r\n  }\r\n\r\n  private selectHandler = (selectItemValue) => {\r\n    if (!this.disabled && !this.readonly) {\r\n      this.addItem(selectItemValue);\r\n    }\r\n    this.closeList();\r\n  };\r\n\r\n  private clearInput = () => {\r\n    if (!this.disabled && !this.readonly) {\r\n      this.removeItem(this.value);\r\n    }\r\n  };\r\n\r\n\r\n  private blurHandler = () => {\r\n    this.hasFocus = false;\r\n  };\r\n\r\n  private focusHandler = () => {\r\n    this.hasFocus = true;\r\n  };\r\n\r\n  private closeList = () => {\r\n    if (!this.disabled && !this.readonly && this.isOpen) {\r\n      this.isOpen = false;\r\n      setTimeout(() => this.setFocus(), 100);\r\n    }\r\n  };\r\n\r\n  private openList = () => {\r\n    if (!this.disabled && !this.readonly && !this.isOpen) {\r\n      this.isOpen = true;\r\n      if (this.search !== 'none') {\r\n        this.searchString = '';\r\n        setTimeout(() => {\r\n          const dropdownContent = this.dropdownContentElm;\r\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\r\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\r\n          this.fixPosition();\r\n          this.nativeInput.focus();\r\n        }, 100);\r\n      } else {\r\n        setTimeout(() => {\r\n          const dropdownContent = this.dropdownContentElm;\r\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\r\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\r\n          this.fixPosition();\r\n        }, 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  private toggleList = () => {\r\n    if (this.isOpen)\r\n      this.closeList();\r\n    else\r\n      this.openList();\r\n  };\r\n\r\n\r\n  private keyDownHandler = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      evt.preventDefault();\r\n      this.toggleList();\r\n    } else if (evt.key === 'ArrowDown') {\r\n      if (this.isOpen) {\r\n        console.log('inside select');\r\n        evt.preventDefault();\r\n        this.menuElm.setFocus();\r\n      }\r\n    } else if (evt.key === 'ArrowUp') {\r\n      if (this.isOpen) {\r\n        evt.preventDefault();\r\n        this.menuElm.setFocus(); // focus on previous item\r\n      }\r\n    }\r\n  };\r\n\r\n  private onInput = (ev: Event) => {\r\n    const input = ev.target as HTMLInputElement;\r\n    this.searchString = input.value || '';\r\n    this.goatSearch.emit({ value: this.searchString });\r\n  };\r\n\r\n  private hasValue(): boolean {\r\n    return (this.value || '').toString().length > 0;\r\n  }\r\n\r\n  private getItemByValue(value) {\r\n    if (this.items) {\r\n      return this.items.find((item) => {\r\n        return item.value == value;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDisplayValue() {\r\n    if (!this.multiple) {\r\n      if (this.items) {\r\n        const item = this.getItemByValue(this.value);\r\n        if (item) {\r\n          return item.label;\r\n        }\r\n      }\r\n      if (!this.disabled && !this.readonly) {\r\n        return this.placeholder;\r\n      } else {\r\n        return <span>&nbsp;</span>;\r\n      }\r\n    } else {\r\n      if (!this.value && !this.disabled && !this.readonly) {\r\n        return this.placeholder;\r\n      } else {\r\n        return <span>&nbsp;</span>;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  componentWillLoad() {\r\n    if (this.positions)\r\n      this.position = this.positions.split(',')[0];\r\n    this.elm.getAttributeNames().forEach((name: string) => {\r\n      if (name.includes('aria-')) {\r\n        this.configAria[name] = this.elm.getAttribute(name);\r\n        this.elm.removeAttribute(name);\r\n      }\r\n    });\r\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\r\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\r\n  }\r\n\r\n\r\n  @Listen('scroll', { target: 'window' })\r\n  fixPosition() {\r\n    if (this.isOpen && this.dropdownContentHeight && this.dropdownContentWidth) {\r\n\r\n      if (isMobile()) {\r\n        this.position = 'center';\r\n        return;\r\n      }\r\n\r\n      const positions = this.positions.split(',');\r\n      for (let i = 0; i < positions.length; i++) {\r\n        const dropdownButtonRect: any = this.elm.getBoundingClientRect();\r\n        const dropdownContentRect: any = {};\r\n        if (positions[i] === 'bottom-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'top-right') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left;\r\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\r\n        } else if (positions[i] === 'bottom-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\r\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        } else if (positions[i] === 'top-left') {\r\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\r\n          dropdownContentRect.bottom = dropdownButtonRect.top;\r\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\r\n          dropdownContentRect.right = dropdownButtonRect.left;\r\n        }\r\n        const isOut = isOutOfViewport(dropdownContentRect);\r\n        if (!isOut.any) {\r\n          this.position = positions[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  connectedCallback() {\r\n    this.debounceChanged();\r\n  }\r\n\r\n  renderMultiSelectValues() {\r\n    const values = this.getValues();\r\n    if (this.multiple && values.length) {\r\n      return values.map((value) => {\r\n        const item = this.getItemByValue(value);\r\n        if (item) {\r\n          return (\r\n            <goat-tag filter class='multi-select-value' value={item.value}>{item.label}</goat-tag>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<Host\r\n      has-value={this.hasValue()}\r\n      has-focus={this.hasFocus}\r\n      is-open={this.isOpen}\r\n      position={this.position}>\r\n\r\n      <div class={{ 'dropdown': true, 'select': true, [this.position]: true, 'is-open': this.isOpen }}>\r\n        <div class={{\r\n          'input-container': true,\r\n          [`search-${this.search}`]: true,\r\n          'has-focus': this.hasFocus,\r\n          'disabled': this.disabled,\r\n          'readonly': this.readonly,\r\n          'has-value': this.hasValue(),\r\n          'start-slot-has-content': this.startSlotHasContent,\r\n          'end-slot-has-content': this.endSlotHasContent,\r\n        }}>\r\n\r\n          <div class='slot-container start'>\r\n            <slot name='start' />\r\n          </div>\r\n\r\n          <div class='multi-select-values'>\r\n            {this.renderMultiSelectValues()}\r\n          </div>\r\n\r\n          {\r\n            (() => {\r\n              if (this.search !== 'none' && this.isOpen) {\r\n                return <input class='input input-native'\r\n                              ref={input => this.nativeInput = input}\r\n                              type='text'\r\n                              name={this.name}\r\n                              value={this.searchString}\r\n                              placeholder={this.placeholder}\r\n                              onBlur={this.blurHandler}\r\n                              onFocus={this.focusHandler}\r\n                              onInput={this.onInput}\r\n                              onKeyDown={this.keyDownHandler}\r\n                              {...this.configAria}\r\n                />;\r\n              } else {\r\n                return <div class='input display-value'\r\n                            tabindex='0'\r\n                            ref={input => this.displayElement = input}\r\n                            aria-disabled={this.disabled ? 'true' : null}\r\n                            onFocus={this.focusHandler}\r\n                            onBlur={this.blurHandler}\r\n                            onKeyDown={this.keyDownHandler}\r\n                            onClick={(evt) => {\r\n                              evt.preventDefault();\r\n                              this.toggleList();\r\n                            }}\r\n                            {...this.configAria} >\r\n                  {this.getDisplayValue()}\r\n                </div>;\r\n              }\r\n            })()\r\n          }\r\n\r\n\r\n          {this.clearable && !this.multiple && this.hasValue() &&\r\n            <goat-icon class='clear input-action' name='x-circle-fill' size={this.size} onClick={this.clearInput}\r\n                       role='button' />}\r\n\r\n          <div class='slot-container end'>\r\n            <slot name='end' />\r\n          </div>\r\n\r\n          {this.getModeIcon()}\r\n\r\n        </div>\r\n        <div class='dropdown-content' ref={(elm) => this.dropdownContentElm = elm}>\r\n          {this.isOpen && this.renderDropdownList()}\r\n        </div>\r\n      </div>\r\n    </Host>);\r\n  }\r\n\r\n\r\n  private getModeIcon() {\r\n    if (this.showLoader) {\r\n      return <goat-spinner class='input-action rainbow' />;\r\n    }\r\n    if (!this.disabled && !this.readonly)\r\n      return <goat-icon name='chevron-down' size={this.size}\r\n                        class='input-action chevron-down' role='button' onClick={this.toggleList} />;\r\n  }\r\n\r\n  private renderDropdownList() {\r\n    if (this.search === 'managed' && !this.items.length) {\r\n      return <goat-menu\r\n        class='menu'\r\n        ref={(el) => this.menuElm = el}>\r\n\r\n        <div class='start-search'>\r\n          <goat-icon name='search' size={this.size} />\r\n          <goat-text shade='secondary'>Start typing to perform search</goat-text>\r\n        </div>\r\n\r\n      </goat-menu>;\r\n    }\r\n\r\n\r\n    if (this.items) {\r\n      const filteredItems = this.filterItems();\r\n      return <goat-menu\r\n        class='menu'\r\n        empty={filteredItems.length == 0}\r\n        ref={(el) => this.menuElm = el}>\r\n\r\n        {(() => {\r\n          return filteredItems.map((item) => {\r\n            return <goat-menu-item value={item.value}>\r\n              {item.label || item.value}\r\n            </goat-menu-item>;\r\n          });\r\n        })()}\r\n\r\n      </goat-menu>;\r\n    }\r\n  }\r\n\r\n  private filterItems() {\r\n    if (this.search === 'managed')\r\n      return this.items;\r\n    return this.items.filter((item) => {\r\n      return (!this.searchString || item.label.toLocaleLowerCase().includes(this.searchString.toLocaleLowerCase()));\r\n    });\r\n  }\r\n\r\n}\r\n","@import \"../../../globalStyles/commons\";\n\n$tag-background-color: var(--tag-background-color, v(--tag-background-gray));\n$tag-color: var(--tag-color, v(--tag-color-gray));\n$tag-hover-color: var(--tag-color, v(--tag-hover-gray));\n\n:host {\n  display: inline-block;\n}\n\n.tag {\n  @include font-style(text-sm);\n  background: $tag-background-color;\n  color: $tag-color;\n  display: flex;\n  align-items: center;\n}\n\n.tag-content {\n  padding: 0 .5rem;\n}\n\n:host([filter]) .tag-content {\n  padding-inline-end: .25rem;\n}\n\n.close-btn {\n  border-radius: 12px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  background: transparent;\n  line-height: 0;\n  cursor: pointer;\n}\n\n.close-btn:hover{\n  background: $tag-hover-color;\n  .close-btn-icon {\n    color: v(--background);\n  }\n}\n\n\n/**\n * Sizes\n */\n.tag.size-md {\n  height: 1.5rem;\n  border-radius: 12px;\n}\n\n\n.tag.size-sm {\n  height: 1.125rem;\n  border-radius: 9px;\n}\n\n@each $color in ['gray', 'blue', 'green', 'red', 'yellow', 'primary', 'success', 'info', 'warning', 'error'] {\n  :host(.color-#{$color}) .tag {\n    --tag-background-color: #{v(--tag-background-#{$color})};\n    --tag-color: #{v(--tag-color-#{$color})};\n    --tag-hover-color: #{v(--tag-hover-#{$color})};\n  }\n}\n","import { Component, ComponentInterface, Element, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\r\n\r\n/**\r\n * @name Tag\r\n * @description Use tags to label, categorize, or organize items using keywords that describe them.\r\n * @example <goat-tag class=\"color-red\">Important</goat-tag>\r\n */\r\n@Component({\r\n  tag: 'goat-tag',\r\n  styleUrl: 'tag.scss',\r\n  shadow: true,\r\n})\r\nexport class Tag implements ComponentInterface {\r\n\r\n  /**\r\n   * Text size.\r\n   */\r\n  @Prop({ reflect: true }) size: 'sm' | 'md' = 'md';\r\n\r\n  @Prop({ reflect: true }) filter: boolean = false;\r\n\r\n  @Prop({ reflect: true }) value: string = '';\r\n\r\n  @Event({ eventName: 'goat:click' }) goatClick: EventEmitter;\r\n\r\n  @Event({ eventName: 'goat:tag-dismiss' }) goatTagDismissClick: EventEmitter;\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n  private dismissClickHandler = () => {\r\n    this.goatTagDismissClick.emit({ value: this.value || this.elm.textContent });\r\n  };\r\n\r\n  renderCloseButton() {\r\n    if (!this.filter) {\r\n      return;\r\n    }\r\n    const size = this.size === 'md' ? '24px' : '16px';\r\n    return <button class='close-btn' onClick={() => this.dismissClickHandler()}>\r\n      <goat-icon class='close-btn-icon inherit' name='x' size={size}></goat-icon>\r\n    </button>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={{ 'tag': true, [`size-${this.size}`]: true }}>\r\n          <div class='tag-content'>\r\n            <slot />\r\n          </div>\r\n          {this.renderCloseButton()}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}