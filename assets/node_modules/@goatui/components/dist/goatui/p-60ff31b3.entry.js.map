{"version":3,"sources":["src/components/table/table/table.scss?tag=goat-table&encapsulation=shadow","src/components/table/table/table.tsx"],"names":["tableCss","DEFAULT_CELL_WIDTH","SUPPORTED_PAGE_SIZES","value","label","Table","this","onSelectAllClick","selectedRowKeys","isSelectAll","data","map","row","keyField","onSelectChange","onRowSelectClick","includes","filter","rowId","push","onCellMouseOver","column","hoveredCell","title","description","[object Object]","goatSelectChange","emit","col","goatCellClick","record","fixedCols","scrollCols","selectionType","h","class","size","onGoat:change","columns","forEach","colWidth","width","parseInt","colEl","sort","sortBy","name","style","sortable","icon","sortOrder","variant","onClick","goatSort","rows","managed","a","b","paginate","slice","page","pageSize","center","tabindex","col-hover","onMouseOver","selection","window","getSelection","type","onCellClick","fixed","row-hover","totalItems","length","inline","items","positions","e","detail","goatPage","getTotalItems","disabled","Host","table","renderHeader","renderBody","renderEmptyState","renderPagination","Object","assign","emptyState"],"mappings":"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","sourcesContent":["@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n  height: 100%;\n  min-height: 20em;\n  --table-border-color: #{v(--ui-04)};\n}\n\n.table {\n  height: 100%;\n  border: 1px solid var(--table-border-color);\n  @include font-style(text-md);\n  display: flex;\n  flex-direction: column;\n\n  .table-scroll-container {\n    position: relative;\n    overflow: auto;\n    height: 100%;\n  }\n\n  .empty-table {\n    height: 80%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .pagination {\n    display: flex;\n    border-top: 1px solid var(--table-border-color);\n\n    .form-control {\n      margin: 0;\n    }\n    .select {\n      margin: 0;\n      --input-border-radius: none;\n      --input-border-style: none;\n      border-left: 1px solid var(--table-border-color);\n      border-right: 1px solid var(--table-border-color);\n    }\n\n    .page-sizes-select {\n      margin-inline-start: v(--spacing-3);\n    }\n\n    .pagination-item-count {\n      margin-inline-start: v(--spacing-4);\n      flex: 1;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n\n.row {\n  display: flex;\n  box-sizing: border-box;\n\n\n  .columns-container {\n    display: flex;\n  }\n\n  .col {\n    margin: 0;\n    color: v(--text-primary);\n    box-sizing: border-box;\n    vertical-align: middle;\n    line-height: normal;\n\n    .col-content {\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .col-text {\n        padding: v(--spacing-2) v(--spacing-3);\n        flex: 1;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n      }\n\n      .col-action {\n        --button-border-radius: none;\n\n        &.has-focus {\n          z-index: 12;\n        }\n      }\n\n      .checkbox {\n        padding: 0 v(--spacing-3);\n      }\n    }\n\n    &.center .col-content {\n      justify-content: center;\n    }\n\n    &:last-child {\n      flex: 1;\n    }\n  }\n\n  .fixed-columns {\n    position: sticky;\n    left: 0;\n    z-index: 1;\n  }\n\n  .scrollable-columns {\n    flex: 1;\n    z-index: 0;\n  }\n\n}\n\n.header {\n  z-index: v(--z-index-table-header);\n  font-weight: v(--font-weight-semi-bold);\n  text-transform: uppercase;\n  position: sticky;\n  top: 0;\n  background: v(--ui-01);\n\n\n  .left-panel {\n    position: sticky;\n    top: 0;\n    left: 0;\n  }\n\n  .col {\n    background: v(--ui-01);\n    border-bottom: 1px solid var(--table-border-color);\n\n    &.sort {\n      background: v(--active-ui);\n    }\n  }\n}\n\n.body {\n\n  .row {\n    &:hover {\n      background-color: v(--hover-ui);\n\n      .col {\n        background-color: v(--hover-ui);\n      }\n    }\n\n    .col {\n      cursor: pointer;\n      background: v(--background);\n      border: 2px solid transparent;\n      border-bottom: 1px solid var(--ui-03);\n\n      &:focus {\n        outline: none;\n        border: 2px solid v(--color-primary);\n        z-index: 1;\n      }\n    }\n  }\n\n\n  .left-panel {\n    position: sticky;\n    left: 0;\n  }\n\n}\n\n:host(.show-full-content) .body .col-text {\n  overflow: initial;\n  white-space: initial;\n  text-overflow: initial;\n}\n\n:host-context([data-theme=dark]) {\n\n}\n\n.empty-data {\n  text-align: center;\n  position: absolute;\n  margin: auto;\n  top: 46px;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  border-radius: 3px;\n  height: max-content;\n  color: v(--color-neutral-600);\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\r\n\r\n\r\nconst DEFAULT_CELL_WIDTH = 16; // in rem\r\nconst SUPPORTED_PAGE_SIZES = [{\r\n  value: 10,\r\n  label: 10,\r\n}, {\r\n  value: 25,\r\n  label: 25,\r\n}, {\r\n  value: 50,\r\n  label: 50,\r\n}, {\r\n  value: 100,\r\n  label: 100,\r\n}];\r\n\r\n\r\n/**\r\n * @name Table\r\n * @description A configurable component for displaying tabular data.\r\n * @img /assets/img/table.png\r\n */\r\n@Component({\r\n  tag: 'goat-table',\r\n  styleUrl: 'table.scss',\r\n  shadow: true,\r\n})\r\nexport class Table {\r\n\r\n  @Element() elm!: HTMLElement;\r\n\r\n\r\n  /**\r\n   * Grid columns configuration.\r\n   * [\r\n   * {\r\n   *   \"name\":\"name\",\r\n   *   \"label\":\"Name\",\r\n   *   \"width\":300,\r\n   *   \"fixed\":true\r\n   *  },\r\n   * {\r\n   *   \"name\":\"age\",\r\n   *   \"label\":\"Age\"\r\n   * }\r\n   * ]\r\n   */\r\n  @Prop() columns: any[] = [];\r\n\r\n  /**\r\n   * Grid data to display on table\r\n   * [{\r\n   *  'id': '5e7118ddce4b3d577956457f',\r\n   *  'age': 21,\r\n   *  'name': 'John',\r\n   *  'company': 'India',\r\n   *  'email': 'john@example.com',\r\n   *  'phone': '+1 (839) 560-3581',\r\n   *  'address': '326 Irving Street, Grimsley, Texas, 4048'\r\n   *  }]\r\n   */\r\n  @Prop() data: any[] = [];\r\n\r\n  @Prop() selectionType: 'checkbox' | undefined;\r\n\r\n  @Prop({ mutable: true }) selectedRowKeys: string[] = [];\r\n\r\n  @Prop() keyField: string = 'id';\r\n\r\n  @Prop() managed: boolean = false;\r\n\r\n  @Prop() sortable: boolean = true;\r\n\r\n  @Prop({ mutable: true }) sortBy: string;\r\n\r\n  @Prop({ mutable: true }) sortOrder: 'asc' | 'desc' = 'asc';\r\n\r\n  @Prop() paginate: boolean = true;\r\n\r\n  @Prop() page: number = 1;\r\n\r\n  @Prop() pageSize: number = 10;\r\n\r\n  @Prop({ mutable: true }) totalItems;\r\n\r\n  @Prop({ mutable: true }) emptyState: any = {\r\n    'title': 'No items',\r\n    'description': 'There are no items to display',\r\n  };\r\n\r\n  @State() private hoveredCell: any = {};\r\n  @State() private isSelectAll: boolean = false;\r\n\r\n  @Event({ eventName: 'goat:table-cell-click' }) goatCellClick: EventEmitter;\r\n  @Event({ eventName: 'goat:table-select-change' }) goatSelectChange: EventEmitter;\r\n  @Event({ eventName: 'goat:sort' }) goatSort: EventEmitter;\r\n  @Event({ eventName: 'goat:page' }) goatPage: EventEmitter;\r\n\r\n  onSelectAllClick = () => {\r\n    let selectedRowKeys = [];\r\n    this.isSelectAll = !this.isSelectAll;\r\n    if (this.isSelectAll)\r\n      selectedRowKeys = this.data.map((row) => row[this.keyField]);\r\n    this.onSelectChange(selectedRowKeys);\r\n  };\r\n\r\n  onRowSelectClick = (row) => {\r\n    let selectedRowKeys = [...this.selectedRowKeys];\r\n    if (selectedRowKeys.includes(row[this.keyField])) {\r\n      this.isSelectAll = false;\r\n      selectedRowKeys = selectedRowKeys.filter((rowId) => rowId !== row[this.keyField]);\r\n    } else {\r\n      selectedRowKeys.push(row[this.keyField]);\r\n    }\r\n    this.onSelectChange(selectedRowKeys);\r\n  };\r\n\r\n  onCellMouseOver = (row: any, column: any) => {\r\n    this.hoveredCell = { row, column };\r\n  };\r\n\r\n  onSelectChange(selectedRowKeys: any) {\r\n    this.selectedRowKeys = selectedRowKeys;\r\n    this.goatSelectChange.emit({ value: this.selectedRowKeys, isSelectAll: this.isSelectAll });\r\n  }\r\n\r\n  onCellClick(row: any, col: any) {\r\n    this.goatCellClick.emit({ record: row, column: col });\r\n  }\r\n\r\n  renderHeader() {\r\n    const fixedCols = [];\r\n    const scrollCols = [];\r\n\r\n    if (this.selectionType === 'checkbox') {\r\n      fixedCols.push(\r\n        <div class='col center'>\r\n          <div class='col-content'>\r\n            <goat-checkbox class='checkbox light' size='sm' value={this.isSelectAll}\r\n                           onGoat:change={this.onSelectAllClick} />\r\n          </div>\r\n        </div>);\r\n    }\r\n    this.columns.forEach((col) => {\r\n      let colWidth = DEFAULT_CELL_WIDTH;\r\n      if (col.width)\r\n        colWidth = parseInt(col.width);\r\n      const colEl = <div class={{ 'col': true, 'sort': this.sortBy === col.name }}\r\n                         style={{ width: colWidth + 'rem' }}>\r\n        <div class='col-content'>\r\n          <div class='col-text'>{col.label}</div>\r\n          <div class='col-actions'>\r\n            {\r\n              (() => {\r\n                if (!this.sortable)\r\n                  return;\r\n                let icon = 'arrow-down-up';\r\n                if (this.sortBy === col.name) {\r\n                  if (this.sortOrder === 'asc')\r\n                    icon = 'arrow-up';\r\n                  else\r\n                    icon = 'arrow-down';\r\n                }\r\n                return <goat-button size='sm'\r\n                                    icon={icon}\r\n                                    class='col-action color-secondary'\r\n                                    variant='ghost' onClick={() => {\r\n                  if (this.sortBy === col.name) {\r\n                    if (this.sortOrder === 'asc')\r\n                      this.sortOrder = 'desc';\r\n                    else\r\n                      this.sortBy = null;\r\n                  } else {\r\n                    this.sortBy = col.name;\r\n                    this.sortOrder = 'asc';\r\n                  }\r\n                  this.goatSort.emit({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n                }} />;\r\n              })()\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>;\r\n      (col.fixed) ? fixedCols.push(colEl) : scrollCols.push(colEl);\r\n    });\r\n\r\n    return <div class='header'>\r\n      <div class='row'>\r\n        <div class='fixed-columns columns-container'>\r\n          {fixedCols}\r\n        </div>\r\n        <div class='scrollable-columns columns-container'>\r\n          {scrollCols}\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  renderBody() {\r\n    const rows = [];\r\n\r\n    let data = [...this.data];\r\n\r\n    if (!this.managed) {\r\n      if (this.sortable && this.sortBy) {\r\n        data = data.sort((a, b) => {\r\n          if (a[this.sortBy] < b[this.sortBy])\r\n            return this.sortOrder === 'asc' ? -1 : 1;\r\n          if (a[this.sortBy] > b[this.sortBy])\r\n            return this.sortOrder === 'asc' ? 1 : -1;\r\n          return 0;\r\n        });\r\n      }\r\n      if (this.paginate) {\r\n        data = data.slice((this.page - 1) * this.pageSize, (this.page) * this.pageSize);\r\n      }\r\n    }\r\n\r\n    data.forEach((row) => {\r\n      const fixedCols = [];\r\n      const scrollCols = [];\r\n\r\n      if (this.selectionType === 'checkbox')\r\n        fixedCols.push(<div class={{ 'col': true, 'center': true }}>\r\n          <div class='col-content'>\r\n            <goat-checkbox class='checkbox light' size='sm' value={this.selectedRowKeys.includes(row[this.keyField])}\r\n                           onGoat:change={() => this.onRowSelectClick(row)} />\r\n          </div>\r\n        </div>);\r\n\r\n\r\n      this.columns.forEach((column) => {\r\n        let colWidth = DEFAULT_CELL_WIDTH;\r\n        if (column.width)\r\n          colWidth = parseInt(column.width);\r\n        const colEl = <div\r\n          tabindex='1'\r\n          class={{ 'col': true, 'col-hover': (this.hoveredCell.row === row && this.hoveredCell.column === column) }}\r\n          style={{ width: colWidth + 'rem' }}\r\n          onMouseOver={() => this.onCellMouseOver(row, column)}\r\n          onClick={() => {\r\n            const selection = window.getSelection();\r\n            if (selection.type != 'Range')\r\n              this.onCellClick(row, column);\r\n          }}>\r\n          <div class='col-content'>\r\n            <div class='col-text' title={row?.[column.name]}>{row?.[column.name]}</div>\r\n          </div>\r\n        </div>;\r\n\r\n        column.fixed ? fixedCols.push(colEl) : scrollCols.push(colEl);\r\n      });\r\n      rows.push(<div class={{ 'row': true, 'row-hover': (this.hoveredCell.row === row) }}>\r\n        <div class='fixed-columns columns-container'>\r\n          {fixedCols}\r\n        </div>\r\n        <div class='scrollable-columns columns-container'>\r\n          {scrollCols}\r\n        </div>\r\n      </div>);\r\n    });\r\n\r\n    return <div class='body'>\r\n      {rows}\r\n    </div>;\r\n  }\r\n\r\n  getTotalItems() {\r\n    let totalItems = this.totalItems;\r\n    if (this.paginate && !this.managed)\r\n      totalItems = this.data.length;\r\n    return totalItems;\r\n  }\r\n\r\n  renderPagination() {\r\n    if (this.paginate)\r\n      return <div class='pagination'>\r\n        <div class='page-sizes-select'>\r\n          <goat-form-control label='Items per page:' inline class='form-control'>\r\n            <goat-select size='sm'\r\n                         class='select'\r\n                         items={SUPPORTED_PAGE_SIZES}\r\n                         positions='top-right'\r\n                         value={this.pageSize}\r\n                         onGoat:change={(e) => {\r\n                           this.pageSize = e.detail.value;\r\n                           this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\r\n                         }} />\r\n          </goat-form-control>\r\n        </div>\r\n        <div class='pagination-item-count'>\r\n          <goat-text\r\n            size='sm'>{this.pageSize * (this.page - 1)} - {this.pageSize * (this.page) < this.getTotalItems() ? this.pageSize * (this.page) : this.getTotalItems()} of {this.getTotalItems()} items\r\n          </goat-text>\r\n        </div>\r\n        <div class='pagination-right'>\r\n          <div class='table-footer-right-content'>\r\n\r\n            <div class='table-footer-right-content-pagination'>\r\n              <goat-button size='sm' icon='arrow-left' variant='ghost'\r\n                           disabled={this.page === 1}\r\n                           onClick={() => {\r\n                             this.page = this.page - 1;\r\n                             this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\r\n                           }} />\r\n              <goat-button size='sm' icon='arrow-right' variant='ghost'\r\n                           disabled={this.pageSize * (this.page) >= this.getTotalItems()}\r\n                           onClick={() => {\r\n                             this.page = this.page + 1;\r\n                             this.goatPage.emit({ page: this.page, pageSize: this.pageSize });\r\n                           }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  }\r\n\r\n  render() {\r\n    return <Host>\r\n      <div class={{ 'table': true, 'sortable': this.sortable, 'paginate': this.paginate }}>\r\n        <div class='table-scroll-container'>\r\n          {this.renderHeader()}\r\n          {(this.data.length) ? this.renderBody() : this.renderEmptyState()}\r\n        </div>\r\n        <div class='table-footer'>\r\n          {this.renderPagination()}\r\n        </div>\r\n      </div>\r\n    </Host>;\r\n  }\r\n\r\n  private renderEmptyState() {\r\n    return <div class='empty-table'>\r\n      <goat-empty-state class='content-center' {...this.emptyState} />\r\n    </div>;\r\n  }\r\n\r\n}\r\n"]}