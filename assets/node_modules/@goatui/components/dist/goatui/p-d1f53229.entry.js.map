{"version":3,"sources":["src/components/controls/button/button.scss?tag=goat-button&encapsulation=shadow","src/components/controls/button/button.tsx","src/components/content/svg/datasource.ts","src/components/content/svg/svg.scss?tag=goat-svg&encapsulation=shadow","src/components/content/svg/svg.tsx"],"names":["buttonCss","Button","this","gid","getComponentIndex","renderIcon","h","name","icon","size","getIconSize","class","clickHandler","event","disabled","showLoader","goatClick","emit","preventDefault","stopPropagation","blurHandler","hasFocus","focusHandler","mouseDownHandler","isActive","keyDownHandler","evt","key","[object Object]","nativeInput","focus","blur","click","ElementSize","SMALL","LARGE","X_LARGE","XX_LARGE","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","getAttributeNames","forEach","includes","configAria","slotHasContent","hasChildNodes","disabledReason","id","role","NativeElementTag","href","Host","has-focus","active","button","block","variant","selected","has-content","icon-end","iconEnd","show-loader","Object","assign","target","ref","input","onBlur","onFocus","onClick","onMouseDown","onKeyDown","aria-describedby","aria-disabled","renderDisabledReason","cache","async","fetchIcon","url","res","fetch","method","mode","credentials","text","svgCss","Svg","src","svg","newValue","fetchSvg","innerHTML"],"mappings":"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","sourcesContent":["@import \"../../../globalStyles/commons\";\n\n$border-width: 0.0625;\n$button-radius: var(--button-border-radius, #{v(--border-radius)});\n$button-border-style: var(--button-border-style, solid);\n\n$button-color: var(--button-color, v(--color-primary));\n$button-color-hover: var(--button-color-hover, v(--color-primary-70));\n$button-color-active: var(--button-color-active, v(--color-primary-80));\n$button-color-support: var(--button-color-support, $button-color);\n\n$button-color-light-hover: var(--button-color-light-hover, v(--color-primary-20));\n$button-color-light-active: var(--button-color-light-active, v(--color-primary-30));\n/*\n--button-text-color: #{v(--text-primary)};\n--button-color: transparent;\n--button-color-hover: #{v(--color-brand-primary-20)};\n--button-color-active: #{v(--color-brand-primary-30)};\n--button-color-focus: #{v(--color-brand-primary)};*/\n\n@function removeBorder($width) {\n  @return #{($width*1 - ($border-width * 2))}rem;\n}\n\n:host {\n  display: inline-block;\n  height: var(--button-height, auto);\n}\n\n.button {\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: var(--button-height, auto);\n\n  .native-button {\n    font-family: var(--font-family-base);\n    text-decoration: none;\n    height: 100%;\n    cursor: pointer;\n    z-index: v(--z-index-button);\n    background: transparent;\n    padding: 0;\n    border: #{$border-width}rem #{$button-border-style} transparent;\n    border-width: var(--button-border-width, #{($border-width)}rem);\n    border-radius: #{$button-radius};\n    outline: none;\n\n    .slot-container {\n      display: none;\n    }\n  }\n\n  .button-content {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    height: 100%;\n    gap: v(--spacing-2);\n    border-radius: 2px;\n    border: #{$border-width}rem solid transparent;\n  }\n\n  .button-background {\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n\n    border-radius: #{$button-radius};\n    pointer-events: none;\n  }\n\n  &.disabled .native-button {\n    cursor: not-allowed;\n  }\n\n  &.has-content .slot-container {\n    display: flex;\n  }\n\n}\n\n/**\n  * SIZES\n  */\n.button.size-sm, .button.size-small {\n  .button-content {\n    padding: removeBorder(0.5);\n    @include font-style(text-sm);\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\n  }\n\n  &.has-content .button-content {\n    padding: removeBorder(0.5) removeBorder(0.875);\n  }\n}\n\n:host(.icon-only) {\n  .button.size-sm, .button.size-small {\n    .button-content {\n      padding: removeBorder(0.5);\n    }\n  }\n}\n\n.button.size-md, .button.size-medium {\n  .button-content {\n    padding: removeBorder(0.625);\n    @include font-style(text-sm);\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\n  }\n\n  &.has-content .button-content {\n    padding: removeBorder(0.625) removeBorder(1.125);\n  }\n}\n\n:host(.icon-only) {\n  .button.size-md, .button.size-medium {\n    .button-content {\n      padding: removeBorder(0.625);\n    }\n  }\n}\n\n.button.size-lg, .button.size-large {\n  .button-content {\n    padding: removeBorder(0.625);\n    @include font-style(text-md);\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\n  }\n\n  &.has-content .button-content {\n    padding: removeBorder(0.625) removeBorder(1);\n  }\n}\n\n:host(.icon-only) {\n  .button.size-lg, .button.size-large {\n    .button-content {\n      padding: removeBorder(0.625);\n    }\n  }\n}\n\n.button.size-xl {\n  .button-content {\n    padding: removeBorder(0.75);\n    @include font-style(text-md);\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\n  }\n\n  &.has-content .button-content {\n    padding: removeBorder(0.75) removeBorder(1.25);\n  }\n}\n\n:host(.icon-only) {\n  .button.size-xl {\n    .button-content {\n      padding: removeBorder(0.75);\n    }\n  }\n}\n\n.button.size-xxl {\n  .button-content {\n    padding: removeBorder(1);\n    @include font-style(text-lg);\n    font-weight: var(--button-font-weight, v(--font-weight-medium));\n  }\n\n  &.has-content .button-content {\n    padding: removeBorder(1) removeBorder(1.75);\n  }\n}\n\n:host(.icon-only) {\n  .button.size-xxl {\n    .button-content {\n      padding: removeBorder(1);\n    }\n  }\n}\n\n\n/**\n * Button variant definitions\n */\n.button.variant-default {\n\n  .native-button {\n    color: var(--button-text-color, v(--color-white));\n    border-color: #{$button-color};\n  }\n\n  .button-background {\n    background: #{$button-color-support};\n  }\n\n  &:hover {\n    .native-button {\n      border-color: #{$button-color-hover};\n    }\n\n    .button-background {\n      background: #{$button-color-hover};\n    }\n  }\n\n  &.active, &.selected {\n    .native-button {\n      border-color: #{$button-color-active};\n    }\n\n    .button-background {\n      background: #{$button-color-active};\n    }\n  }\n\n  &.has-focus:not(.active) .native-button {\n    .button-content {\n      border-color: v(--color-white);\n    }\n\n    border-color: var(--button-color-focus, v(--color-primary));\n  }\n\n  &.disabled {\n    .native-button {\n      color: v(--disabled-03);\n      border-color: v(--text-disabled) !important;\n    }\n\n    .button-background {\n      background: v(--text-disabled) !important;\n    }\n\n    &.has-focus:not(.active) .native-button {\n      border-color: v(--color-neutral) !important;\n    }\n  }\n}\n\n.button.variant-outline {\n  .native-button {\n    color: #{$button-color};\n    border-color: #{$button-color};\n  }\n\n  .button-background {\n    background: transparent;\n  }\n\n\n  &:hover {\n    .native-button {\n      color: var(--button-text-color, v(--color-white));\n    }\n\n    .button-background {\n      background: #{$button-color};\n    }\n  }\n\n  &.active, &.selected {\n    .native-button {\n      color: var(--button-text-color, v(--color-white));\n      border-color: #{$button-color-active};\n    }\n\n    .button-background {\n      background: #{$button-color-active};\n    }\n  }\n\n  &.has-focus:not(.active) {\n    .native-button {\n      color: var(--button-text-color, v(--color-white));\n      border-color: var(--button-color-focus, v(--color-primary));\n    }\n\n    .button-background {\n      background: #{$button-color};\n    }\n\n    .button-content {\n      border-color: v(--color-white);\n    }\n  }\n\n  &.disabled {\n    .native-button {\n      color: v(--disabled-03) !important;\n      border-color: v(--text-disabled) !important;\n    }\n\n    .button-background {\n      background: transparent !important;\n    }\n\n    &.has-focus:not(.active) .native-button {\n      border-color: v(--color-neutral) !important;\n    }\n  }\n}\n\n.button.variant-ghost {\n  .native-button {\n    color: #{$button-color};\n    border-color: transparent;\n  }\n\n  .button-background {\n    background: transparent;\n  }\n\n  &:hover {\n    .button-background {\n      background: #{$button-color-light-hover};\n    }\n  }\n\n  &.active, &.selected {\n    .native-button {\n      color: #{$button-color-active};\n    }\n\n    .button-background {\n      background: #{$button-color-light-active};\n    }\n  }\n\n  &.has-focus:not(.active) .native-button {\n    border-color: var(--button-color-focus, v(--color-primary));\n  }\n\n  &.disabled {\n    .native-button {\n      color: v(--disabled-03) !important;\n      border-color: transparent !important;\n    }\n\n    .button-background {\n      background: transparent !important;\n    }\n\n    &.has-focus:not(.active) .native-button {\n      border-color: var(--button-color-focus, v(--color-neutral)) !important;\n    }\n  }\n}\n\n/**\n  * Color Variants\n  */\n@each $color in [brand-primary, brand-secondary, primary, success, error, info, warning, secondary] {\n  :host(.color-#{$color}) .button {\n    --button-color: #{v(--color-#{$color})};\n    --button-color-hover: #{v(--color-#{$color}-70)};\n    --button-color-active: #{v(--color-#{$color}-80)};\n    --button-color-support: #{v(--color-#{$color})};\n    --button-color-light-hover: #{v(--color-#{$color}-20)};\n    --button-color-light-active: #{v(--color-#{$color}-30)};\n  }\n}\n\n:host(.color-secondary) .button {\n  --button-color: #{v(--color-black)};\n  --button-color-hover: #{v(--color-black)};\n  --button-color-active: #{v(--color-black)};\n  --button-color-support: #{v(--color-black)};\n}\n\n\n:host-context([data-theme=\"dark\"]):host(.color-secondary) .button {\n  --button-color: #{v(--color-white)};\n  --button-text-color: #{v(--color-black)};\n  --button-color-hover: #{v(--color-white)};\n  --button-color-active: #{v(--color-white)};\n  --button-color-support: #{v(--color-white)};\n}\n\n\n:host(.full-height) {\n  .button {\n    height: 100%;\n  }\n}\n\n.button.icon-end .button-content {\n  flex-direction: row-reverse;\n}\n\n\n:host([block]) {\n  display: block;\n\n  .native-button {\n    width: 100%;\n  }\n\n  .button-content {\n    justify-content: center;\n  }\n\n  .spinner {\n    margin: auto;\n  }\n}\n\n:host(.rounded) {\n  .native-button {\n    border-radius: 100%;\n  }\n\n  .button-content {\n    border-radius: 100%;\n  }\n\n  .button-background {\n    border-radius: 100%;\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { ElementSize, getComponentIndex } from '../../../utils/utils';\n\n/**\n * @name Button\n * @description An interactive button with a range of presentation options.\n * @example <goat-button>\n *   Button CTA\n *   </goat-button>\n */\n@Component({\n  tag: 'goat-button',\n  styleUrl: 'button.scss',\n  shadow: true,\n})\nexport class Button implements ComponentInterface {\n\n  gid: string = getComponentIndex();\n\n  /**\n   * Button size.\n   * Possible values are `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"`, `\"xxl\"`. Defaults to `\"md\"`.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' = 'md';\n\n  @Prop() variant: 'default' | 'light' | 'outline' | 'ghost' | 'link' = 'default';\n\n  /**\n   * If true, fits button width to its parent width. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) block: boolean = false;\n\n\n  /**\n   * Button selection state.\n   */\n  @Prop({ reflect: true }) selected: boolean = false;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Prop() disabledReason: string = '';\n  /**\n   * Icon which will displayed on button.\n   * Possible values are bootstrap icon names.\n   */\n  @Prop() icon: string;\n\n  /**\n   * Icon position.\n   */\n  @Prop() iconEnd: boolean = false;\n\n  /**\n   * Show loader.\n   */\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * Hyperlink to navigate to on click.\n   */\n  @Prop() href: string;\n\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\n\n  /**\n   * Sets or retrieves the window or frame at which to target content.\n   */\n  @Prop() target: string = '_self';\n\n  /**\n   * On click of button, a CustomEvent 'goat:click' will be triggered.\n   */\n  @Event({ eventName: 'goat:click' }) goatClick: EventEmitter;\n\n\n  @State() hasFocus = false;\n  @State() isActive = false;\n  @State() slotHasContent = false;\n\n  @Element() elm!: HTMLElement;\n  private tabindex?: string | number;\n  private nativeInput?: HTMLButtonElement;\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive)\n      this.isActive = false;\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key == ' '))\n      this.isActive = false;\n  }\n\n  /**\n   * Sets focus on the native `button` in `goat-button`. Use this method instead of the global\n   * `button.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n      this.hasFocus = true;\n    }\n  }\n\n  /**\n   * Sets blur on the native `button` in `goat-button`. Use this method instead of the global\n   * `button.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n      this.hasFocus = false;\n    }\n  }\n\n  @Method()\n  async triggerClick() {\n    if (this.nativeInput) {\n      this.nativeInput.click();\n    }\n  }\n\n  private getIconSize() {\n    switch (this.size) {\n      case ElementSize.SMALL:\n        return 'sm';\n      case ElementSize.LARGE:\n        return 'md';\n      case ElementSize.X_LARGE:\n        return 'md';\n      case ElementSize.XX_LARGE:\n        return 'lg';\n      default:\n        return 'sm';\n    }\n  }\n\n  private renderIcon = () => {\n    return <goat-icon name={this.icon} size={this.getIconSize()} class='icon inherit' />;\n  };\n\n  private clickHandler = (event: PointerEvent) => {\n    if (!this.disabled && !this.showLoader) {\n      this.goatClick.emit();\n    } else {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n  };\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key == ' ') {\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  private renderDisabledReason() {\n    if (this.disabled && this.disabledReason)\n      return <div id={`disabled-reason-${this.gid}`} role='tooltip' class='sr-only'>\n        {this.disabledReason}\n      </div>;\n  }\n\n  render() {\n\n    let NativeElementTag = 'button';\n    if (this.href) {\n      NativeElementTag = 'a';\n    }\n\n    return (<Host has-focus={this.hasFocus} active={this.isActive}>\n      <div class={{\n        button: true,\n        [`size-${this.size}`]: true,\n        block: this.block,\n        [`variant-${this.variant}`]: true,\n        'disabled': this.disabled,\n        'selected': this.selected,\n        'has-focus': this.hasFocus,\n        'active': this.isActive,\n        'has-content': this.slotHasContent,\n        'icon-end': this.iconEnd,\n        'show-loader': this.showLoader,\n      }}>\n        <div class='button-background' />\n        <NativeElementTag\n          class='native-button'\n          tabindex={this.tabindex}\n          href={this.href}\n          target={this.target}\n          ref={input => this.nativeInput = input}\n          onBlur={this.blurHandler}\n          onFocus={this.focusHandler}\n          onClick={this.clickHandler}\n          onMouseDown={this.mouseDownHandler}\n          onKeyDown={this.keyDownHandler}\n          aria-describedby={this.disabled && this.disabledReason ? `disabled-reason-${this.gid}` : null}\n          aria-disabled={(this.disabled || this.showLoader) + ''}\n          {...this.configAria}>\n\n          <div class='button-content'>\n            {this.showLoader && <goat-spinner class='spinner inherit' size={this.getIconSize()} />}\n\n            {!this.showLoader && this.icon && this.renderIcon()}\n\n            {!this.showLoader && <div class='slot-container'>\n              <slot />\n            </div>}\n          </div>\n\n        </NativeElementTag>\n        {this.renderDisabledReason()}\n      </div>\n\n    </Host>);\n  }\n\n}\n","const cache: Record<string, string> = {};\r\n\r\n// TODO: prevent duplicated request when rendering multiple icons with same name simultaneously\r\nexport async function fetchIcon(url) {\r\n  if (!url) return '';\r\n  if (cache[url]) {\r\n    return cache[url];\r\n  }\r\n  const res = await fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    credentials: 'omit',\r\n  });\r\n  cache[url] = await res.text();\r\n  return cache[url];\r\n}\r\n","@import \"../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.icon {\r\n  line-height: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\nsvg {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n:host(.inherit) .icon {\r\n  color: inherit;\r\n}\r\n","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\r\nimport { fetchIcon } from './datasource';\r\n\r\n@Component({\r\n  tag: 'goat-svg',\r\n  styleUrl: 'svg.scss',\r\n  shadow: true,\r\n})\r\nexport class Svg {\r\n\r\n  @Prop() src: string = '';\r\n\r\n  @State() svg: string = '';\r\n\r\n  async fetchSvg(name: string) {\r\n    if (this.src)\r\n      this.svg = await fetchIcon(name);\r\n  }\r\n\r\n\r\n  @Watch('src')\r\n  async handleNameChange(newValue: string) {\r\n    this.svg = await fetchIcon(newValue);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    await this.fetchSvg(this.src);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div innerHTML={this.svg} class={{ 'icon': true }} />\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"]}