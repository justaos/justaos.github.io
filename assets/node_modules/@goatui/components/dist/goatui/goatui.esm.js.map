{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","events","availableViews","view","showLoader","timezone","contextDate","columns","data","selectionType","selectedRowKeys","keyField","managed","sortable","sortBy","sortOrder","paginate","page","pageSize","totalItems","emptyState","hoveredCell","isSelectAll","size","isOpen","disabled","positions","items","hasFocus","position","setFocus","name","notifications","isDarkMode","value","empty","internalEmptyState","language","lineNumbers","compiledCode","logo","subTitle","target","active","selected","disabledReason","icon","label","isActive","slotHasContent","triggerClick","required","readonly","theme","debounce","editorMonacoInstance","getComponentId","setBlur","blockSize","activities","activityHeight","activityWidth","lines","placeholder","state","type","clearable","autocomplete","configAria","startSlotHasContent","endSlotHasContent","src","content","shadowLevel","variant","days","currentTime","unitSize","padding","viewbox","computedViewbox","paths","vertical","lowContrast","dismissible","actionable","actionName","actionLabel","hidden","message","intermediate","rounded","animate","caption","error","warning","success","inline","svg","block","iconEnd","shade","level","illustration","headline","description","action","actionUrl","actionVariant","actionDisabled","multiple","search","searchString","filter"],"mappings":"2CAMA,MAAMA,EAAe,KA6BjB,MAAMC,EAAaC,OAAOC,KAAKC,IAC/B,MAAMC,EAA6D,GAenE,GAAuBJ,IAAe,GAAI,CACtCI,EAAKC,aAAe,IAAIC,IAAI,IAAKN,GAAYO,KAajD,OAAOC,EAAeJ,IC9D1BL,IAAeU,MAAKC,GAEXC,EAAc,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,gBAA8B,CAAAC,OAAS,CAAA,IAAAC,eAAA,CAAA,EAAA,mBAAAC,KAAA,CAAA,GAAAC,WAAA,CAAA,EAAA,eAAAC,SAAA,CAAA,GAAAC,YAAA,CAAA,KAAA,oBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,aAAA,CAAAC,QAAA,CAAA,IAAAC,KAAA,CAAA,IAAAC,cAAA,CAAA,EAAA,kBAAAC,gBAAA,CAAA,MAAAC,SAAA,CAAA,EAAA,aAAAC,QAAA,CAAA,GAAAC,SAAA,CAAA,GAAAC,OAAA,CAAA,KAAA,WAAAC,UAAA,CAAA,KAAA,cAAAC,SAAA,CAAA,GAAAC,KAAA,CAAA,GAAAC,SAAA,CAAA,EAAA,aAAAC,WAAA,CAAA,KAAA,eAAAC,WAAA,CAAA,KAAA,eAAAC,YAAA,CAAA,IAAAC,YAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,gBAAA,CAAAC,KAAA,CAAA,GAAAC,OAAA,CAAA,KAAA,WAAAC,SAAA,CAAA,GAAAC,UAAA,CAAA,GAAAC,MAAA,CAAA,IAAAC,SAAA,CAAA,IAAAC,SAAA,CAAA,IAAAC,SAAA,CAAA,KAAA,CAAA,CAAA,EAAA,QAAA,eAAA,CAAA,EAAA,uBAAA,uBAAA,CAAA,EAAA,aAAA,eAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,SAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,4BAAA,CAAAC,KAAA,CAAA,KAAAF,SAAA,CAAA,GAAAG,cAAA,CAAA,IAAAC,WAAA,CAAA,KAAA,CAAA,CAAA,EAAA,aAAA,eAAA,CAAA,EAAA,oBAAA,0BAAA,CAAA,aAAA,CAAA,CAAA,EAAA,oBAAA,CAAA7B,WAAA,CAAA,EAAA,eAAA8B,MAAA,CAAA,MAAAC,MAAA,CAAA,MAAAf,WAAA,CAAA,KAAA,eAAAgB,mBAAA,CAAA,IAAAN,SAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,qBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,wBAAA,CAAAO,SAAA,CAAA,GAAAC,YAAA,CAAA,EAAA,gBAAAJ,MAAA,CAAA,GAAAK,aAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,oBAAA,CAAAC,KAAA,CAAA,GAAAT,KAAA,CAAA,GAAAnC,KAAA,CAAA,GAAA6C,SAAA,CAAA,EAAA,iBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,uBAAA,CAAA7C,KAAA,CAAA,GAAA8C,OAAA,CAAA,GAAAb,SAAA,CAAA,KAAAc,OAAA,CAAA,SAAA,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAApB,KAAA,CAAA,GAAAqB,SAAA,CAAA,KAAAnB,SAAA,CAAA,KAAAoB,eAAA,CAAA,EAAA,mBAAAC,KAAA,CAAA,GAAAC,MAAA,CAAA,GAAAb,MAAA,CAAA,GAAAQ,OAAA,CAAA,GAAAtC,WAAA,CAAA,EAAA,eAAAwB,SAAA,CAAA,IAAAoB,SAAA,CAAA,IAAAC,eAAA,CAAA,IAAAnB,SAAA,CAAA,IAAAoB,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,mBAAA,CAAAnB,KAAA,CAAA,GAAAG,MAAA,CAAA,MAAAiB,SAAA,CAAA,KAAA1B,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAC,MAAA,CAAA,GAAAhB,SAAA,CAAA,GAAAC,YAAA,CAAA,EAAA,gBAAAgB,SAAA,CAAA,GAAA1B,SAAA,CAAA,IAAA2B,qBAAA,CAAA,IAAAC,eAAA,CAAA,IAAA1B,SAAA,CAAA,IAAA2B,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,qBAAA,CAAAC,UAAA,CAAA,EAAA,cAAAC,WAAA,CAAA,IAAAlC,SAAA,CAAA,GAAAmC,eAAA,CAAA,IAAAC,cAAA,CAAA,IAAAC,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,uBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,aAAA,CAAA/B,KAAA,CAAA,GAAAgC,YAAA,CAAA,GAAA7B,MAAA,CAAA,MAAAX,KAAA,CAAA,KAAAyC,MAAA,CAAA,KAAAC,KAAA,CAAA,GAAAxC,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAD,SAAA,CAAA,KAAAe,UAAA,CAAA,GAAAZ,SAAA,CAAA,GAAAa,aAAA,CAAA,GAAAC,WAAA,CAAA,KAAA,eAAAC,oBAAA,CAAA,IAAAC,kBAAA,CAAA,IAAA1C,SAAA,CAAA,IAAA4B,eAAA,CAAA,IAAA1B,SAAA,CAAA,IAAA2B,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,gBAAA,CAAA1B,KAAA,CAAA,GAAAgC,YAAA,CAAA,GAAA7B,MAAA,CAAA,MAAAX,KAAA,CAAA,KAAAE,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAY,MAAA,CAAA,KAAAb,SAAA,CAAA,GAAAG,SAAA,CAAA,GAAAY,UAAA,CAAA,GAAAE,WAAA,CAAA,KAAA,eAAAxC,SAAA,CAAA,IAAA0C,kBAAA,CAAA,IAAAxC,SAAA,CAAA,IAAA2B,QAAA,CAAA,IAAAD,eAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,cAAA,CAAAjC,KAAA,CAAA,GAAAQ,KAAA,CAAA,GAAAwC,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,EAAA,aAAA,CAAAC,QAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,EAAA,qBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,YAAA,CAAAC,YAAA,CAAA,EAAA,oBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,mBAAA,CAAA1C,KAAA,CAAA,GAAAgC,YAAA,CAAA,GAAAxC,KAAA,CAAA,KAAAE,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAlB,MAAA,CAAA,MAAAkC,WAAA,CAAA,KAAA,eAAAxC,SAAA,CAAA,IAAA4B,eAAA,CAAA,IAAA1B,SAAA,CAAA,IAAA2B,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,eAAA,CAAArD,WAAA,CAAA,EAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,yBAAA,CAAA8B,MAAA,CAAA,MAAAT,SAAA,CAAA,KAAAmB,SAAA,CAAA,KAAAyB,oBAAA,CAAA,IAAAC,kBAAA,CAAA,IAAA1C,SAAA,CAAA,IAAAoB,SAAA,CAAA,IAAAlB,SAAA,CAAA,IAAA2B,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,iBAAA,CAAAvB,MAAA,CAAA,KAAAS,OAAA,CAAA,SAAA,CAAA,aAAA,CAAA,CAAA,EAAA,YAAA,KAAA,CAAA,CAAA,EAAA,iBAAA,gBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,iBAAA,CAAA+B,QAAA,CAAA,GAAA9D,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,iBAAA,gBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,mBAAA,CAAAmB,KAAA,CAAA,GAAAgC,YAAA,CAAA,GAAAxC,KAAA,CAAA,KAAAE,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAlB,MAAA,CAAA,MAAAkC,WAAA,CAAA,KAAA,eAAAxC,SAAA,CAAA,IAAA4B,eAAA,CAAA,IAAA1B,SAAA,CAAA,IAAA2B,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,4BAAA,CAAAxD,OAAA,CAAA,IAAAE,KAAA,CAAA,GAAAwE,KAAA,CAAA,GAAAC,YAAA,CAAA,IAAAtE,YAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,cAAA,CAAAuE,SAAA,CAAA,EAAA,aAAAf,MAAA,CAAA,IAAAgB,QAAA,CAAA,GAAAC,QAAA,CAAA,GAAAC,gBAAA,CAAA,IAAAC,MAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,eAAA,CAAAC,SAAA,CAAA,KAAAjC,eAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,oBAAA,CAAAe,MAAA,CAAA,GAAAmB,YAAA,CAAA,EAAA,gBAAAC,YAAA,CAAA,GAAAC,WAAA,CAAA,GAAAC,WAAA,CAAA,EAAA,eAAAC,YAAA,CAAA,EAAA,gBAAAC,OAAA,CAAA,IAAAvD,WAAA,CAAA,MAAA,CAAA,EAAA,aAAA,CAAAwD,QAAA,CAAA,GAAAzB,MAAA,CAAA,KAAA/B,WAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,gBAAA,CAAAF,KAAA,CAAA,GAAAgB,MAAA,CAAA,GAAAb,MAAA,CAAA,MAAAwD,aAAA,CAAA,MAAAC,QAAA,CAAA,GAAApE,KAAA,CAAA,GAAA4B,SAAA,CAAA,KAAAC,SAAA,CAAA,KAAA3B,SAAA,CAAA,KAAA2C,WAAA,CAAA,KAAA,eAAAxC,SAAA,CAAA,IAAAgE,QAAA,CAAA,IAAA5C,SAAA,CAAA,IAAAC,eAAA,CAAA,IAAAO,eAAA,CAAA,IAAA1B,SAAA,CAAA,IAAA2B,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,iBAAA,CAAA,EAAA,oBAAA,CAAAV,MAAA,CAAA,GAAA8C,QAAA,CAAA,GAAAC,MAAA,CAAA,GAAAC,QAAA,CAAA,GAAAC,QAAA,CAAA,GAAAC,OAAA,CAAA,GAAA9C,SAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,EAAA,uCAAA,CAAA5C,QAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,EAAA,YAAA,CAAAX,KAAA,CAAA,GAAA8C,OAAA,CAAA,GAAAd,SAAA,CAAA,IAAAoB,SAAA,CAAA,IAAAE,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,eAAA,CAAA3B,KAAA,CAAA,KAAA,CAAA,EAAA,YAAA,CAAAQ,KAAA,CAAA,KAAAR,KAAA,CAAA,KAAA2E,IAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA,EAAA,WAAA,CAAA3B,IAAA,CAAA,GAAA2B,IAAA,CAAA,MAAA,CAAA,EAAA,cAAA,CAAA3E,KAAA,CAAA,GAAAmD,QAAA,CAAA,GAAAyB,MAAA,CAAA,KAAAvD,SAAA,CAAA,KAAAnB,SAAA,CAAA,KAAAoB,eAAA,CAAA,EAAA,mBAAAC,KAAA,CAAA,GAAAsD,QAAA,CAAA,EAAA,YAAAhG,WAAA,CAAA,EAAA,eAAAR,KAAA,CAAA,GAAAwE,WAAA,CAAA,KAAA,eAAA1B,OAAA,CAAA,GAAAd,SAAA,CAAA,IAAAoB,SAAA,CAAA,IAAAC,eAAA,CAAA,IAAAnB,SAAA,CAAA,IAAA2B,QAAA,CAAA,IAAAP,aAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,mBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,YAAA,CAAA9C,WAAA,CAAA,EAAA,eAAA8B,MAAA,CAAA,MAAAC,MAAA,CAAA,MAAAf,WAAA,CAAA,KAAA,eAAAgB,mBAAA,CAAA,IAAAN,SAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,mBAAA,CAAA,EAAA,iBAAA,CAAAI,MAAA,CAAA,MAAAT,SAAA,CAAA,KAAAmB,SAAA,CAAA,KAAAyB,oBAAA,CAAA,IAAAC,kBAAA,CAAA,IAAA1C,SAAA,CAAA,IAAAoB,SAAA,CAAA,IAAAlB,SAAA,CAAA,IAAA2B,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,QAAA,iBAAA,CAAA,EAAA,YAAA,CAAAQ,KAAA,CAAA,KAAAoC,MAAA,CAAA,KAAAC,MAAA,CAAA,GAAA/E,KAAA,CAAA,QAAA,CAAA,EAAA,mBAAA,CAAAgF,aAAA,CAAA,KAAAC,SAAA,CAAA,KAAAC,YAAA,CAAA,KAAAC,OAAA,CAAA,KAAAC,UAAA,CAAA,EAAA,cAAAC,cAAA,CAAA,EAAA,kBAAAC,eAAA,CAAA,EAAA,mBAAA3B,SAAA,CAAA,KAAA,CAAA,CAAA,EAAA,SAAA,qBAAA,CAAA,aAAA,CAAA,CAAA,EAAA,cAAA,CAAAnD,KAAA,CAAA,GAAAgC,YAAA,CAAA,GAAA7B,MAAA,CAAA,MAAA4E,SAAA,CAAA,GAAAvF,KAAA,CAAA,KAAAwF,OAAA,CAAA,GAAA/C,MAAA,CAAA,KAAAb,SAAA,CAAA,KAAA1B,SAAA,CAAA,KAAA2B,SAAA,CAAA,KAAAhD,WAAA,CAAA,EAAA,eAAAoB,OAAA,CAAA,KAAA,WAAA4C,WAAA,CAAA,KAAA,eAAAzC,MAAA,CAAA,GAAAD,UAAA,CAAA,GAAAwC,UAAA,CAAA,GAAAZ,SAAA,CAAA,GAAA1B,SAAA,CAAA,IAAAoF,aAAA,CAAA,IAAA3C,oBAAA,CAAA,IAAAC,kBAAA,CAAA,IAAAzC,SAAA,CAAA,IAAAC,SAAA,CAAA,IAAA2B,QAAA,CAAA,IAAAD,eAAA,CAAA,KAAA,CAAA,CAAA,EAAA,QAAA,eAAA,CAAA,EAAA,uBAAA,iBAAA,CAAA,EAAA,mBAAA,mBAAA,CAAA,EAAA,SAAA,iBAAA,CAAA,EAAA,WAAA,CAAAjC,KAAA,CAAA,KAAA0F,OAAA,CAAA,KAAA/E,MAAA,CAAA,UAAAnC","sourcesContent":["/*\n Stencil Client Patch Browser v2.20.0 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}