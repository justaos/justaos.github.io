{"version":3,"sources":["src/components/navigation/link/link.scss?tag=goat-link&encapsulation=shadow","src/components/navigation/link/link.tsx"],"names":["linkCss","Link","this","gid","getComponentIndex","blurHandler","hasFocus","focusHandler","mouseDownHandler","isActive","keyDownHandler","evt","key","[object Object]","nativeInput","click","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","itemprop","h","Host","has-focus","active","class","link","href","target","ref","input","onBlur","onFocus","onMouseDown","onKeyDown"],"mappings":"6FAAA,MAAMA,EAAU,ukDCaHC,EAAI,+BAEfC,KAAAC,IAAcC,IAwCNF,KAAAG,YAAc,KACpBH,KAAKI,SAAW,OAGVJ,KAAAK,aAAe,KACrBL,KAAKI,SAAW,MAGVJ,KAAAM,iBAAmB,KACzBN,KAAKO,SAAW,MAGVP,KAAAQ,eAAkBC,IACxB,GAAIA,EAAIC,KAAO,SAAWD,EAAIC,KAAO,IAAK,CACxCV,KAAKO,SAAW,+DAzCA,oBACA,MAQpBI,gBACE,GAAIX,KAAKO,SACPP,KAAKO,SAAW,MAIpBI,YAAYF,GACV,GAAIT,KAAKO,WAAaE,EAAIC,KAAO,SAAWD,EAAIC,KAAO,KACrDV,KAAKO,SAAW,MAIpBI,qBACE,GAAIX,KAAKY,YAAa,CACpBZ,KAAKY,YAAYC,SAsBrBF,oBAIE,GAAIX,KAAKc,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWhB,KAAKc,IAAIG,aAAa,YACvCjB,KAAKgB,SAAWA,IAAa,KAAOA,EAAWE,UAC/ClB,KAAKc,IAAIK,gBAAgB,YAE3B,GAAInB,KAAKc,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWhB,KAAKc,IAAIG,aAAa,YACvCjB,KAAKoB,SAAWJ,IAAa,KAAOA,EAAWE,UAC/ClB,KAAKc,IAAIK,gBAAgB,aAK7BR,SAEE,OAAQU,EAACC,EAAI,CAAAC,YAAYvB,KAAKI,SAAUoB,OAAQxB,KAAKO,UACnDc,EAAA,IAAA,CAAGI,MAAO,CACRC,KAAQ,KACRH,YAAavB,KAAKI,SAClBoB,OAAUxB,KAAKO,UAEdoB,KAAM3B,KAAK2B,KACXC,OAAQ5B,KAAK4B,OACbR,SAAUpB,KAAKoB,SACfS,IAAKC,GAAS9B,KAAKY,YAAckB,EACjCd,SAAUhB,KAAKgB,SACfe,OAAQ/B,KAAKG,YACb6B,QAAShC,KAAKK,aACd4B,YAAajC,KAAKM,iBAClB4B,UAAWlC,KAAKQ,gBAEjBa,EAAA,OAAA","sourcesContent":["@import \"../../../globalStyles/commons\";\r\n\r\n\r\n:host {\r\n  display: inline-block;\r\n}\r\n\r\n.link {\r\n\r\n  border-radius: v(--border-radius);\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  text-decoration: var(--link-decoration, none);\r\n\r\n  color: var(--link-color, v(--link-01));\r\n\r\n  &:hover {\r\n    color: var(--link-color-hover, v(--hover-primary-text));\r\n    text-decoration: var(--link-decoration-hover, underline);\r\n  }\r\n\r\n  &:visited {\r\n    color: var(--link-color-visited, v(--visited-link));\r\n  }\r\n\r\n  &.active {\r\n    color: var(--link-color-active, v(--text-primary));\r\n  }\r\n\r\n\r\n}\r\n\r\n:host(.no-style) .link {\r\n  color: inherit !important;\r\n  text-decoration: none !important;\r\n}\r\n\r\n:host(.no-decoration) .link {\r\n  text-decoration: none !important;\r\n}\r\n\r\n:host(.inline) .link {\r\n  text-decoration: var(--link-decoration, underline);\r\n}\r\n\r\n.link.has-focus:not(.active) {\r\n  text-decoration: none;\r\n  @include focus-ring();\r\n}\r\n","import { Component, ComponentInterface, Element, h, Host, Listen, Method, Prop, State } from '@stencil/core';\nimport { getComponentIndex } from '../../../utils/utils';\n\n/**\n * @name Link\n * @description Links allow users to click their way from page to page.\n * @example <goat-link href=\"#\">Link</goat-link>\n */\n@Component({\n  tag: 'goat-link',\n  styleUrl: 'link.scss',\n  shadow: true,\n})\nexport class Link implements ComponentInterface {\n\n  gid: string = getComponentIndex();\n\n  /**\n   * Hyperlink to navigate to on click.\n   */\n  @Prop() href: string;\n\n  /**\n   * Sets or retrieves the window or frame at which to target content.\n   */\n  @Prop() target: string;\n\n\n  @State() hasFocus = false;\n  @State() isActive = false;\n\n  @Element() elm!: HTMLElement;\n  private tabindex?: string | number;\n  private itemprop?: string;\n  private nativeInput?: HTMLAnchorElement;\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive)\n      this.isActive = false;\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key == 'Enter' || evt.key == ' '))\n      this.isActive = false;\n  }\n\n  @Method()\n  async triggerClick() {\n    if (this.nativeInput) {\n      this.nativeInput.click();\n    }\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key == 'Enter' || evt.key == ' ') {\n      this.isActive = true;\n    }\n  };\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n    if (this.elm.hasAttribute('itemprop')) {\n      const tabindex = this.elm.getAttribute('itemprop');\n      this.itemprop = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('itemprop');\n    }\n  }\n\n\n  render() {\n\n    return (<Host has-focus={this.hasFocus} active={this.isActive}>\n      <a class={{\n        'link': true,\n        'has-focus': this.hasFocus,\n        'active': this.isActive,\n      }}\n         href={this.href}\n         target={this.target}\n         itemprop={this.itemprop}\n         ref={input => this.nativeInput = input}\n         tabindex={this.tabindex}\n         onBlur={this.blurHandler}\n         onFocus={this.focusHandler}\n         onMouseDown={this.mouseDownHandler}\n         onKeyDown={this.keyDownHandler}>\n\n        <slot />\n\n      </a>\n    </Host>);\n  }\n\n}\n"]}