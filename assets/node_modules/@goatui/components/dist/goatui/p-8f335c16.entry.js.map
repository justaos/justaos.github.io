{"version":3,"sources":["src/components/calendar/calendar/column-view/column-view-background/column-view-background.scss?tag=goat-calendar-column-view-background&encapsulation=shadow","src/components/calendar/calendar/column-view/column-view-background/column-view-background.tsx"],"names":["columnViewBackgroundCss","CalendarColumnViewBackground","[object Object]","columns","i","this","cls","isEqual","startOfDay","Date","push","h","class","join","rows","row","renderBackgroundColumns","Host"],"mappings":"gHAAA,MAAMA,EAA0B,snCCSnBC,EAA4B,4CAEb,EAG1BC,0BACE,MAAMC,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKF,QAASC,IAAK,CACrC,MAAME,EAAM,CAAC,UACb,GAAIC,EAAQC,EAAWJ,GAAII,EAAW,IAAIC,OACxCH,EAAII,KAAK,UACXP,EAAQO,KAAKC,EAAA,MAAA,CAAKC,MAAON,EAAIO,KAAK,QAGpC,OAAOV,EAGTD,SAEE,MAAMY,EAAO,GACb,IAAK,IAAIV,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAME,EAAM,CAAC,OACb,GAAIF,EAAI,EACNE,EAAII,KAAK,QACX,MAAMK,EAAMJ,EAAA,MAAA,CAAKC,MAAON,EAAIO,KAAK,MAC9BR,KAAKW,2BAERF,EAAKJ,KAAKK,GAGZ,OACEJ,EAACM,EAAI,KACHN,EAAA,MAAA,CAAKC,MAAM,cAAcE","sourcesContent":["@import \"../../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  --calendar-border-color: #{v(--ui-04)};\r\n  --scale-size: 3rem;\r\n  --scale-color: #{v(--text-placeholder)}\r\n}\r\n\r\n.background {\r\n  .row {\r\n    display: flex;\r\n    height: 2rem;\r\n    border-bottom: 1px dashed v(--scale-color);\r\n\r\n    &.hour {\r\n      border-bottom: 1px solid v(--scale-color);\r\n    }\r\n\r\n    &:last-child {\r\n      border-bottom: 0;\r\n    }\r\n\r\n    .column {\r\n      flex: 1;\r\n      border-right: 1px solid v(--scale-color);\r\n    }\r\n  }\r\n}\r\n","import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\r\nimport { isEqual, startOfDay } from 'date-fns';\r\n\r\n\r\n@Component({\r\n  tag: 'goat-calendar-column-view-background',\r\n  styleUrl: 'column-view-background.scss',\r\n  shadow: true,\r\n})\r\nexport class CalendarColumnViewBackground implements ComponentInterface {\r\n\r\n  @Prop() columns: number = 1;\r\n\r\n\r\n  renderBackgroundColumns() {\r\n    const columns = [];\r\n    for (let i = 0; i < this.columns; i++) {\r\n      const cls = ['column'];\r\n      if (isEqual(startOfDay(i), startOfDay(new Date())))\r\n        cls.push('active');\r\n      columns.push(<div class={cls.join(' ')}>\r\n      </div>);\r\n    }\r\n    return columns;\r\n  }\r\n\r\n  render() {\r\n\r\n    const rows = [];\r\n    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours\r\n      const cls = ['row'];\r\n      if (i % 2)\r\n        cls.push('hour');\r\n      const row = <div class={cls.join(' ')}>\r\n        {this.renderBackgroundColumns()}\r\n      </div>;\r\n      rows.push(row);\r\n    }\r\n\r\n    return (\r\n      <Host>\r\n        <div class='background'>{rows}</div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"]}