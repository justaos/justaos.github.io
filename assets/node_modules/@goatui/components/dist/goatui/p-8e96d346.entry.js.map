{"version":3,"sources":["node_modules/date-fns/esm/addHours/index.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/differenceInCalendarDays/index.js","node_modules/date-fns/esm/differenceInDays/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfWeek/index.js","src/components/calendar/calendar/utils.tsx","src/components/calendar/calendar/column-view/ColumnEventManager.ts","src/components/calendar/calendar/column-view/column-view.scss?tag=goat-calendar-column-view&encapsulation=shadow","src/components/calendar/calendar/column-view/column-view.tsx"],"names":["MILLISECONDS_IN_HOUR","addHours","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addMilliseconds","startOfWeek","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","getDefaultOptions","weekStartsOn","locale","RangeError","date","toDate","day","getDay","diff","setDate","getDate","setHours","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDay","startOfDayRight","timestampLeft","getTime","getTimezoneOffsetInMilliseconds","timestampRight","Math","round","compareLocalAsc","dateLeft","dateRight","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","differenceInDays","sign","difference","abs","isLastDayNotFull","Number","result","endOfDay","endOfWeek","calculateWeekRange","startDate","endDate","totalDays","ColumnEventManager","[object Object]","_ColumnEventManager_events","set","this","events","__classPrivateFieldSet","__classPrivateFieldGet","concat","columnViewCss","CalendarColumnView","singleDayEvents","manager","addEvents","viewBodyHeight","elm","shadowRoot","querySelector","scrollHeight","scroll","top","getTimePercent","currentTime","columns","i","Date","dateRange","addDays","cls","push","h","class","join","onClick","alert","format","isEqual","rows","row","renderBackgroundColumns","startTime","j","currentDay","time","forDay","percent","valueOf","view","contextDate","days","renderHeader","renderScale","renderEvents","style","width","getDatePercent","left"],"mappings":"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","sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { endOfMonth, endOfWeek, startOfMonth, startOfWeek } from 'date-fns/esm';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport { differenceInMilliseconds } from 'date-fns';\r\n\r\n\r\n/**\r\n * Calculates start and end dates of month in a calendar.\r\n * @param date Context date for which range need to calculated.\r\n * @param weekStartsOn A numeric value. The index of the first day of the week (0 - Sunday)\r\n */\r\nexport function calculateMonthRange(date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6 = 1) {\r\n  const startDate = startOfWeek(startOfMonth(date), { weekStartsOn });\r\n  const endDate = endOfWeek(endOfMonth(date), { weekStartsOn });\r\n  return {\r\n    startDate,\r\n    endDate,\r\n    totalDays: 42,\r\n  };\r\n}\r\n\r\n/*\r\n *\r\n */\r\nexport function calculateWeekRange(date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6 = 1) {\r\n  const startDate = startOfWeek(date, { weekStartsOn });\r\n  const endDate = endOfWeek(date, { weekStartsOn });\r\n  return {\r\n    startDate,\r\n    endDate,\r\n    totalDays: 7,\r\n  };\r\n}\r\n\r\nexport class EventNode {\r\n  event: CalendarEvent;\r\n\r\n  width: number = 1;\r\n\r\n  constructor(event) {\r\n    this.event = event;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class EventBucket {\r\n\r\n  eventNodes: EventNode[] = [];\r\n\r\n  columns: EventNode[][];\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n\r\n  insert(node: EventNode) {\r\n    this.eventNodes.push(node);\r\n  }\r\n\r\n  process() {\r\n    this.columns = [];\r\n    let events = this.eventNodes.sort((a, b) => {\r\n      return differenceInMilliseconds(a.event.start, b.event.start) || b.event.length() - a.event.length();\r\n    });\r\n\r\n    let oldLength = null;\r\n    /* Bucketing */\r\n    while (events.length) {\r\n      if (oldLength == events.length)\r\n        throw new Error('Events not processed in previous run, breaking infinite loop');\r\n      oldLength = events.length;\r\n\r\n      const column = [];\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (i == 0)\r\n          column.push(events[i]);\r\n        else if (differenceInMilliseconds(events[i].event.start, column[column.length - 1].event.end) >= 0) {\r\n          column.push(events[i]);\r\n        }\r\n      }\r\n      this.columns.push(column);\r\n      events = events.filter((e) => {\r\n        return !column.find((ce) => {\r\n          return ce.event == e.event;\r\n        });\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this.columns.length - 1; i++) {\r\n\r\n      this.columns[i].forEach((event) => {\r\n        for (let j = i + 1; j < this.columns.length; j++) {\r\n          if (this.columns[j].find((colEvent) => {\r\n            return this.#eventOverlapping(event.event, colEvent.event);\r\n          })) {\r\n            break;\r\n          }\r\n          event.width++;\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  #eventOverlapping(eventA: CalendarEvent, eventB: CalendarEvent) {\r\n    if (differenceInMilliseconds(eventA.start, eventB.start) > 0) {\r\n      const temp = eventA;\r\n      eventA = eventB;\r\n      eventB = temp;\r\n    }\r\n    const totalLength = differenceInMilliseconds(eventB.end, eventA.start);\r\n    return totalLength < eventA.length() + eventB.length();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import CalendarEvent from '../CalendarEvent';\r\n\r\nexport default class ColumnEventManager {\r\n\r\n  #events: CalendarEvent[] = [];\r\n\r\n  addEvents(events: CalendarEvent[]) {\r\n    this.#events = this.#events.concat(events);\r\n  }\r\n\r\n  getEvents() {\r\n    return this.#events;\r\n  }\r\n}\r\n","@import \"../../../../globalStyles/commons\";\r\n\r\n:host {\r\n  display: block;\r\n  height: 100%;\r\n  --calendar-border-color: #{v(--ui-04)};\r\n  --scale-size: 3rem;\r\n  --scale-color: #{v(--text-placeholder)}\r\n}\r\n\r\n.scale {\r\n  width: var(--scale-size);\r\n}\r\n\r\n\r\n.calendar-column-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  .view-header {\r\n    border-top: 1px solid v(--border-color);\r\n    display: flex;\r\n\r\n    .scale {\r\n      border-bottom: 1px solid v(--scale-color);\r\n      border-right: 1px solid v(--scale-color);\r\n    }\r\n\r\n    .columns {\r\n      display: flex;\r\n      flex: 1;\r\n      border-bottom: 1px solid v(--scale-color);\r\n\r\n      .column {\r\n        flex: 1;\r\n\r\n\r\n        border-right: 1px solid v(--scale-color);\r\n\r\n\r\n        .column-content {\r\n          display: flex;\r\n          border-top: .5rem solid transparent;\r\n          align-items: center;\r\n          padding: .5rem;\r\n          gap: .5rem;\r\n        }\r\n\r\n        &.today {\r\n          .column-content {\r\n            border-top-color: v(--color-primary);\r\n\r\n            .date {\r\n              color: v(--color-primary);\r\n            }\r\n          }\r\n        }\r\n\r\n        .date {\r\n          font-size: 2rem;\r\n          cursor: pointer;\r\n          border-radius: 100%;\r\n          padding: 0.5rem;\r\n\r\n          &:hover {\r\n            background: v(--color-primary-30);\r\n          }\r\n        }\r\n\r\n        .day {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .scrollbar-placeholder {\r\n      width: var(--scrollbar-width);\r\n    }\r\n  }\r\n\r\n  .view-body {\r\n    height: 100%;\r\n    border-bottom: 1px solid v(--calendar-border-color);\r\n    overflow-y: scroll;\r\n\r\n    .view-body-scroll {\r\n      display: flex;\r\n      position: relative;\r\n\r\n      .scale {\r\n        border-right: 1px solid v(--scale-color);\r\n\r\n        .row {\r\n          width: 0;\r\n          position: relative;\r\n          height: 2rem;\r\n          border-bottom: 1px dashed v(--scale-color);\r\n\r\n          &.hour {\r\n            border-bottom: 1px solid v(--scale-color);\r\n            width: 50%;\r\n            margin-inline-start: 50%;\r\n          }\r\n\r\n          &:last-child {\r\n            border-bottom: 0;\r\n          }\r\n\r\n          .time {\r\n            position: absolute;\r\n            top: -.5rem;\r\n            font-size: .75rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .drawing-area {\r\n        flex: 1;\r\n\r\n        .events-container {\r\n          position: absolute;\r\n          top: 0;\r\n          left: var(--scale-size);\r\n          width: calc(100% - var(--scale-size));\r\n          height: 100%;\r\n          display: flex;\r\n          .column {\r\n            flex: 1;\r\n            padding: 0 1rem 0 1px;\r\n\r\n            .column-content {\r\n              position: relative;\r\n              height: 100%;\r\n            }\r\n\r\n            .event {\r\n              background: v(--color-primary-20);\r\n              border-left: .35rem solid v(--color-primary);\r\n              border-radius: 3px;\r\n              position: absolute;\r\n              .event-title {\r\n                padding: 0.25rem;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .current-time-line {\r\n        position: absolute;\r\n        z-index: 100;\r\n        pointer-events: none;\r\n        width: calc(100% - var(--scale-size));\r\n        margin-inline-start: var(--scale-size);\r\n\r\n        .time {\r\n          position: absolute;\r\n          font-size: .5rem;\r\n          font-weight: 600;\r\n          color: v(--color-primary);\r\n          top: -6px;\r\n          left: -3rem;\r\n          background: v(--color-primary-10);\r\n          padding: 2px;\r\n          border-radius: 3px;\r\n        }\r\n\r\n        .dash-line {\r\n          position: absolute;\r\n          left: 0;\r\n          border-bottom: 1px dashed v(--color-primary);\r\n        }\r\n\r\n        .dot {\r\n          border-radius: 100%;\r\n          width: 0.5rem;\r\n          height: 0.5rem;\r\n          background: v(--color-primary);\r\n          display: block;\r\n          position: absolute;\r\n          top: -0.25rem;\r\n        }\r\n\r\n        .line {\r\n          border-bottom: 2px solid v(--color-primary);\r\n          position: absolute;\r\n          top: -1px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport { addDays, addHours, differenceInDays, endOfDay, format, isEqual, startOfDay } from 'date-fns';\nimport { calculateWeekRange } from '../utils';\nimport ColumnEventManager from './ColumnEventManager';\n\n\n@Component({\n  tag: 'goat-calendar-column-view',\n  styleUrl: 'column-view.scss',\n  shadow: true,\n})\nexport class CalendarColumnView implements ComponentInterface {\n\n  @Element() elm!: HTMLElement;\n\n  @Prop() events: any[] = [];\n\n  @Prop() view = 'week';\n\n  @Prop() days = 7;\n\n  @Prop() currentTime: Date;\n\n  @Prop() contextDate: Date;\n\n  dateRange: any;\n\n\n  singleDayEvents: any = {};\n\n  manager: ColumnEventManager;\n\n  async componentWillLoad() {\n    this.manager = new ColumnEventManager();\n    this.manager.addEvents(this.events);\n\n  }\n\n  async componentDidLoad() {\n    const viewBodyHeight = this.elm.shadowRoot.querySelector('.view-body').scrollHeight;\n    this.elm.shadowRoot.querySelector('.view-body').scroll({ top: (this.getTimePercent(this.currentTime) / 100) * viewBodyHeight - 150 });\n  }\n\n\n  renderHeader() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate); differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1)) {\n      const cls = ['column'];\n      const diff = differenceInDays(startOfDay(i), startOfDay(this.currentTime));\n      if (diff === 0)\n        cls.push('today');\n      else if (diff < 0)\n        cls.push('past');\n      else if (diff < 0)\n        cls.push('future');\n\n      columns.push(<div class={cls.join(' ')}>\n        <div class='column-content'>\n          <div class='date' onClick={() => {\n            alert('date clicked');\n          }}>\n            {format(i, 'dd')}\n          </div>\n          <div class='day'>\n            {format(i, 'E')}\n          </div>\n        </div>\n      </div>);\n    }\n    return columns;\n  }\n\n\n  renderBackgroundColumns() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate); differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1)) {\n      const cls = ['column'];\n      if (isEqual(startOfDay(i), startOfDay(this.currentTime)))\n        cls.push('active');\n      columns.push(<div class={cls.join(' ')}>\n      </div>);\n    }\n    return columns;\n  }\n\n  renderBodyBackground() {\n    const rows = [];\n    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours\n      const cls = ['row'];\n      if (i % 2)\n        cls.push('hour');\n      const row = <div class={cls.join(' ')}>\n        {this.renderBackgroundColumns()}\n      </div>;\n      rows.push(row);\n    }\n    return <div class='background'>{rows}</div>;\n  }\n\n  renderScale() {\n    const rows = [];\n    for (let i = 0; i < 48; i++) { // @TODO: parameterize number of column, currently rendering 24 hours\n      const cls = ['row'];\n      if (i % 2)\n        cls.push('hour');\n      const startTime = startOfDay(new Date());\n      const row = <div class={cls.join(' ')}>\n        {\n          (() => {\n            if (i % 2 == 0 && i) {\n              return <div class='time'>{format(addHours(startTime, i / 2), 'hh a')}</div>;\n            }\n          })()\n        }\n      </div>;\n      rows.push(row);\n    }\n    return <div class='background'>{rows}</div>;\n  }\n\n  renderEvents() {\n    const columns = [];\n    for (let i = new Date(this.dateRange.startDate), j = 0; differenceInDays(startOfDay(this.dateRange.endDate), i) >= 0; i = addDays(i, 1), j++) {\n      const cls = ['column'];\n      if (isEqual(startOfDay(i), startOfDay(this.currentTime)))\n        cls.push('active');\n      columns.push(<div class={cls.join(' ')}>\n        <div class='column-content'>\n          {\n            (() => {\n              /*if (this.eventDays[format(startOfDay(i), 'dd-MM-yyyy')]) {\n                const eventDay = this.eventDays[format(startOfDay(i), 'dd-MM-yyyy')];\n                const columnsLength = eventDay.length;\n                return eventDay.map((nodes, columnIndex) => {\n                  return nodes.map((node) => {\n                    return <div class='event' style={{\n                      top: `${this.getTimePercent(node.event.start, startOfDay(i))}%`,\n                      height: `${this.getTimePercent(node.event.end, startOfDay(i)) - this.getTimePercent(node.event.start, startOfDay(i))}%`,\n                      left: `${columnIndex / columnsLength * 100}%`,\n                      width: `calc(${(1 * node.width) / columnsLength * 100}% - 1px)`,\n                    }}>\n                      <div class='event-title'>{node.event.title || '(no title)'}</div>\n                    </div>;\n                  });\n                });\n              }*/\n            })()\n          }\n\n        </div>\n      </div>);\n    }\n    return <div class='events-container'>{\n      columns\n    }</div>;\n  }\n\n  getDatePercent() {\n    const currentDay = differenceInDays(startOfDay(this.currentTime), this.dateRange.startDate);\n    return (currentDay / this.dateRange.totalDays) * 100;\n  }\n\n  getTimePercent(time, forDay?) {\n    if (!forDay)\n      forDay = time;\n    const startDate = startOfDay(forDay);\n    const endDate = endOfDay(forDay);\n    const percent = (time.valueOf() - startDate.valueOf()) / (endDate.valueOf() - startDate.valueOf()) * 100;\n    if (percent < 0)\n      return 0;\n    if (percent > 100)\n      return 100;\n    return percent;\n  }\n\n\n  render() {\n    if (this.view === 'week') {\n      this.dateRange = calculateWeekRange(this.contextDate, 1);\n    } else {\n      this.dateRange.startDate = startOfDay(this.contextDate);\n      this.dateRange.endDate = endOfDay(addDays(this.contextDate, this.days - 1));\n      this.dateRange.totalDays = this.days;\n    }\n\n\n    return <div class='calendar-column-view'>\n      <div class='view-header'>\n        <div class='scale' />\n        <div class='columns'>\n          {this.renderHeader()}\n        </div>\n        <div class='scrollbar-placeholder' />\n      </div>\n      <div class='view-body'>\n        <div class='view-body-scroll'>\n          <div class='scale'>\n            {this.renderScale()}\n          </div>\n          <div class='drawing-area'>\n            <goat-calendar-column-view-background columns={this.dateRange.totalDays} />\n            {this.renderEvents()}\n          </div>\n          {\n            (() => {\n              if (this.currentTime.valueOf() > this.dateRange.startDate.valueOf() - 1 && this.currentTime.valueOf() < this.dateRange.endDate.valueOf() + 1) {\n                return <div class='current-time-line'\n                            style={{ top: `calc(${this.getTimePercent(this.currentTime)}% - 1px)` }}>\n                  <div class='time'>{format(this.contextDate, 'hh:mm a')}</div>\n                  <div class='dash-line' style={{ width: `${this.getDatePercent()}%` }}></div>\n                  <div class='dot' style={{ 'left': `calc( ${this.getDatePercent()}% - 0.25rem)` }}></div>\n                  <div class='line'\n                       style={{\n                         'left': `${this.getDatePercent()}%`,\n                         width: `${(1 / this.dateRange.totalDays) * 100}%`,\n                       }}></div>\n                </div>;\n              }\n            })()\n          }\n        </div>\n      </div>\n    </div>;\n  }\n\n\n}\n"]}