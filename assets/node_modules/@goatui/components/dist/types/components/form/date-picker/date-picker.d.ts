import { ComponentInterface, EventEmitter } from '../../../stencil-public-runtime';
/**
 * @name Date Picker
 * @description Captures date input.
 * @example <goat-date-picker value='true'></goat-date-picker>
 */
export declare class DatePicker implements ComponentInterface {
  gid: string;
  /**
   * The input field name.
   */
  name: string;
  /**
   * The input field placeholder.
   */
  placeholder: string;
  /**
   * The input field size.
   * Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
   */
  size: 'sm' | 'md' | 'lg';
  /**
   * If true, the user cannot interact with the button. Defaults to `false`.
   */
  disabled: boolean;
  /**
   * If true, the user read the value cannot modify it. Defaults to `false`.
   */
  readonly: boolean;
  /**
   * The input field value.
   */
  value?: string | number | null;
  configAria: any;
  /**
   * Emitted when a keyboard input occurred.
   */
  goatInput: EventEmitter;
  /**
   * Emitted when the value has changed.
   */
  goatChange: EventEmitter;
  /**
   * Emitted when the input loses focus.
   */
  goatBlur: EventEmitter;
  /**
   * Emitted when the input has focus.
   */
  goatFocus: EventEmitter;
  elm: HTMLElement;
  private nativeInput?;
  private tabindex?;
  hasFocus: boolean;
  private hasValue;
  private getValue;
  getComponentId(): Promise<string>;
  /**
   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global
   * `input.focus()`.
   */
  setFocus(): Promise<void>;
  /**
   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global
   * `input.blur()`.
   */
  setBlur(): Promise<void>;
  componentWillLoad(): void;
  private inputHandler;
  private keyDownHandler;
  private blurHandler;
  private focusHandler;
  private clearInput;
  render(): any;
}
